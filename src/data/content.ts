import type { Content } from '../types';

export const courseContent: Content[] = [
  // =================================================================
  // Python Basics - –û–ë–ù–û–í–õ–ï–ù–û –ò –£–õ–£–ß–®–ï–ù–û
  // =================================================================
  {
    id: 'python-vars',
    title: '–û—Å–Ω–æ–≤—ã Python: –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ –¢–∏–ø—ã –î–∞–Ω–Ω—ã—Ö üì¶',
    description: '–°–∞–º—ã–π –ø–µ—Ä–≤—ã–π —à–∞–≥! –£—á–∏–º—Å—è —Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ "–∫–æ—Ä–æ–±–∫–∞—Ö"-–ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, –∑–Ω–∞–∫–æ–º–∏–º—Å—è —Å –∏—Ö —Ç–∏–ø–∞–º–∏ –∏ –æ–±—â–∞–µ–º—Å—è —Å –ø—Ä–æ–≥—Ä–∞–º–º–æ–π —Å –ø–æ–º–æ—â—å—é `print` –∏ `input`.',
    category: '–û—Å–Ω–æ–≤—ã Python',
    tags: ['python', '–ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ', '—Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö', 'print', 'input'],
    content: [
      `### –ß—Ç–æ —Ç–∞–∫–æ–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è? ü§î
–ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —É —Ç–µ–±—è –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ª—à–µ–±–Ω—ã—Ö –∫–æ—Ä–æ–±–æ–∫. –¢—ã –º–æ–∂–µ—à—å –ø–æ–ª–æ–∂–∏—Ç—å –≤ –Ω–∏—Ö —á—Ç–æ —É–≥–æ–¥–Ω–æ: —è–±–ª–æ–∫–æ, –∑–∞–ø–∏—Å–∫—É —Å —Ç–µ–∫—Å—Ç–æ–º, —á–∏—Å–ª–æ. –ß—Ç–æ–±—ã –Ω–µ –∑–∞–ø—É—Ç–∞—Ç—å—Å—è, —Ç—ã –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ—à—å –∫–∞–∂–¥—É—é –∫–æ—Ä–æ–±–∫—É. –í –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏ **–ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ** ‚Äî —ç—Ç–æ –∏ –µ—Å—Ç—å —Ç–∞–∫–∏–µ –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–µ "–∫–æ—Ä–æ–±–∫–∏" –¥–ª—è –¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –ø–∞–º—è—Ç–∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞.

–í Python —Å–æ–∑–¥–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ: –¥–∞–µ—à—å –µ–π –∏–º—è, —Å—Ç–∞–≤–∏—à—å –∑–Ω–∞–∫ \`=\` –∏ –∫–ª–∞–¥–µ—à—å –∑–Ω–∞—á–µ–Ω–∏–µ.

**–ü—Ä–∞–≤–∏–ª–∞ —Ö–æ—Ä–æ—à–µ–≥–æ –∏–º–µ–Ω–∏ –¥–ª—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π:**
- ‚úÖ –ò–º—è –¥–æ–ª–∂–Ω–æ –≥–æ–≤–æ—Ä–∏—Ç—å, —á—Ç–æ –≤–Ω—É—Ç—Ä–∏ (–≤–º–µ—Å—Ç–æ \`x = "–ü–µ—Ç—è"\` –ª—É—á—à–µ \`player_name = "–ü–µ—Ç—è"\`).
- ‚ùå –ò–º—è –Ω–µ –º–æ–∂–µ—Ç –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å —Ü–∏—Ñ—Ä—ã (\`1st_player\` - –æ—à–∏–±–∫–∞!).
- ‚ùå –í –∏–º–µ–Ω–∏ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø—Ä–æ–±–µ–ª–æ–≤ (–≤–º–µ—Å—Ç–æ "player name" –∏—Å–ø–æ–ª—å–∑—É–π \`player_name\`).
- ü§´ –ò–º–µ–Ω–∞ \`print\`, \`input\`, \`int\` –∏ –¥—Ä—É–≥–∏–µ ‚Äî "–∑–∞–Ω—è—Ç—ã" —Å–∞–º–∏–º Python, –∏—Ö –ª—É—á—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å.`,
      {
        language: 'python',
        code: `# –≠—Ç–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π. Python –µ–≥–æ –Ω–µ —á–∏—Ç–∞–µ—Ç, –æ–Ω –¥–ª—è –Ω–∞—Å, –ª—é–¥–µ–π.

# –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é (–∫–æ—Ä–æ–±–∫—É) —Å –∏–º–µ–Ω–µ–º user_name 
# –∏ –∫–ª–∞–¥–µ–º –≤ –Ω–µ–µ —Ç–µ–∫—Å—Ç "–ê–ª–∏—Å–∞". –¢–µ–∫—Å—Ç –≤—Å–µ–≥–¥–∞ –ø–∏—à–µ—Ç—Å—è –≤ –∫–∞–≤—ã—á–∫–∞—Ö "" –∏–ª–∏ ''.
user_name = "–ê–ª–∏—Å–∞"

# –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é user_age –∏ –∫–ª–∞–¥–µ–º –≤ –Ω–µ–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ.
user_age = 14

# –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å –¥—Ä–æ–±–Ω—ã–º —á–∏—Å–ª–æ–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ä–æ—Å—Ç –≤ –º–µ—Ç—Ä–∞—Ö).
# –î—Ä–æ–±–Ω—ã–µ —á–∏—Å–ª–∞ –ø–∏—à—É—Ç—Å—è —á–µ—Ä–µ–∑ —Ç–æ—á–∫—É!
user_height = 1.65 

# –ê —ç—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è-–ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å. –ú–æ–∂–µ—Ç –±—ã—Ç—å –ª–∏–±–æ True (–ø—Ä–∞–≤–¥–∞), –ª–∏–±–æ False (–ª–æ–∂—å).
is_student = True

# –ö–æ–º–∞–Ω–¥–∞ print() "–∑–∞–≥–ª—è–¥—ã–≤–∞–µ—Ç" –≤ –∫–æ—Ä–æ–±–∫–∏ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ —Ç–∞–º –ª–µ–∂–∏—Ç.
# –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º f-—Å—Ç—Ä–æ–∫—É, —á—Ç–æ–±—ã –∫—Ä–∞—Å–∏–≤–æ –≤—Å—ë –≤—ã–≤–µ—Å—Ç–∏.
print(f"–ò–º—è: {user_name}")
print(f"–í–æ–∑—Ä–∞—Å—Ç: {user_age}")
print(f"–†–æ—Å—Ç: {user_height} –º")
print(f"–Ø–≤–ª—è–µ—Ç—Å—è —É—á–µ–Ω–∏–∫–æ–º: {is_student}")`
      },
      `### –î–∏–∞–ª–æ–≥ —Å –ø—Ä–æ–≥—Ä–∞–º–º–æ–π: –∫–æ–º–∞–Ω–¥–∞ \`input()\` üí¨
–ö–æ–º–∞–Ω–¥–∞ \`input()\` ‚Äî —ç—Ç–æ —Å–ø–æ—Å–æ–± –ø—Ä–æ–≥—Ä–∞–º–º—ã –∑–∞–¥–∞—Ç—å –Ω–∞–º –≤–æ–ø—Ä–æ—Å. –û–Ω–∞ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–≤–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∏ –∂–¥–µ—Ç, –ø–æ–∫–∞ –º—ã —á—Ç–æ-–Ω–∏–±—É–¥—å –Ω–∞–ø–∏—à–µ–º –≤ –∫–æ–Ω—Å–æ–ª–∏ –∏ –Ω–∞–∂–º–µ–º **Enter**.`,
      {
        language: 'python',
        code: `# –°–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∂–¥–µ–º, –ø–æ–∫–∞ –æ–Ω —á—Ç–æ-–Ω–∏–±—É–¥—å –Ω–∞–ø–∏—à–µ—Ç.
# –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ—Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é guest_name.
guest_name = input("–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç? ")

# f-—Å—Ç—Ä–æ–∫–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—Å—Ç–∞–≤–ª—è—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä—è–º–æ –≤ —Ç–µ–∫—Å—Ç.
print(f"–û—á–µ–Ω—å –ø—Ä–∏—è—Ç–Ω–æ, {guest_name}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä Python!")`
      },
      `### –ü—Ä–µ–≤—Ä–∞—â–µ–Ω–∏–µ —Ç–∏–ø–æ–≤: –ú–∞–≥–∏—è –¥–ª—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ ‚ú®
**–û—á–µ–Ω—å –≤–∞–∂–Ω—ã–π –º–æ–º–µ–Ω—Ç:** \`input()\` –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç **—Ç–µ–∫—Å—Ç (str)**! –î–∞–∂–µ –µ—Å–ª–∏ —Ç—ã –≤–≤–µ–ª —Ü–∏—Ñ—Ä—ã. –ù–µ–ª—å–∑—è —Å–ª–æ–∂–∏—Ç—å "—Ç–µ–∫—Å—Ç 5" –∏ "—Ç–µ–∫—Å—Ç 10", –ø–æ–ª—É—á–∏—Ç—Å—è "510" (—Å–∫–ª–µ–∏–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞), –∞ –Ω–µ 15.

–ß—Ç–æ–±—ã –¥–µ–ª–∞—Ç—å –º–∞—Ç–µ–º–∞—Ç–∏–∫—É, –Ω–∞–º –Ω—É–∂–Ω–æ –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å —Ç–µ–∫—Å—Ç –≤ —á–∏—Å–ª–∞ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥:
- \`int()\` ‚Äî –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç –≤ **—Ü–µ–ª–æ–µ** —á–∏—Å–ª–æ (integer).
- \`float()\` ‚Äî –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç –≤ **–¥—Ä–æ–±–Ω–æ–µ** —á–∏—Å–ª–æ (float).`,
      {
        language: 'python',
        code: `print("--- ÎçßÏÖàÏùÑ ÏúÑÌïú Í∞ÑÎã®Ìïú Í≥ÑÏÇ∞Í∏∞ ---")

# –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ. –û–Ω–æ –±—É–¥–µ—Ç —Ç–µ–∫—Å—Ç–æ–º!
num1_str = input("–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ: ")
# –ü—Ä–µ–≤—Ä–∞—â–∞–µ–º —Ç–µ–∫—Å—Ç –≤ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ
num1_int = int(num1_str)

# –¢–æ –∂–µ —Å–∞–º–æ–µ –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ —á–∏—Å–ª–∞, –Ω–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ—á–∫—É!
num2_int = int(input("–í–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ: "))

# –¢–µ–ø–µ—Ä—å, –∫–æ–≥–¥–∞ —É –Ω–∞—Å –µ—Å—Ç—å –¥–≤–∞ —á–∏—Å–ª–∞, –º—ã –º–æ–∂–µ–º –∏—Ö —Å–ª–æ–∂–∏—Ç—å
result = num1_int + num2_int

print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {num1_int} + {num2_int} = {result}")`
      },
      `### ‚≠ê –ü–æ–ø—Ä–æ–±—É–π —Å–∞–º!
–ù–∞–ø–∏—à–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É-–∞–Ω–∫–µ—Ç—É. –û–Ω–∞ –¥–æ–ª–∂–Ω–∞:
1. –°–ø—Ä–æ—Å–∏—Ç—å –∏–º—è, –≤–æ–∑—Ä–∞—Å—Ç –∏ –≥–æ—Ä–æ–¥ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è.
2. –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—Å–µ –æ—Ç–≤–µ—Ç—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ.
3. –í—ã–≤–µ—Å—Ç–∏ –∫—Ä–∞—Å–∏–≤—É—é –∏—Ç–æ–≥–æ–≤—É—é –∞–Ω–∫–µ—Ç—É, –Ω–∞–ø—Ä–∏–º–µ—Ä: "–ò—Ç–∞–∫, —Ç–µ–±—è –∑–æ–≤—É—Ç [–ò–º—è], —Ç–µ–±–µ [–í–æ–∑—Ä–∞—Å—Ç] –ª–µ—Ç –∏ —Ç—ã –∏–∑ –≥–æ—Ä–æ–¥–∞ [–ì–æ—Ä–æ–¥]. –ó–¥–æ—Ä–æ–≤–æ!"`
    ],
  },
  {
    id: 'python-if',
    title: '–û—Å–Ω–æ–≤—ã Python: –£—Å–ª–æ–≤–∏—è if-elif-else ‚öîÔ∏è',
    description: '–£—á–∏–º –ø—Ä–æ–≥—Ä–∞–º–º—É –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–µ—à–µ–Ω–∏—è –∏ –≤—ã–±–∏—Ä–∞—Ç—å –ø—É—Ç—å, –∫–∞–∫ —Ä—ã—Ü–∞—Ä—å –Ω–∞ —Ä–∞—Å–ø—É—Ç—å–µ. –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–∏–∫—É —Å `and`, `or` –∏ `not`.',
    category: '–û—Å–Ω–æ–≤—ã Python',
    tags: ['python', '–≤–µ—Ç–≤–ª–µ–Ω–∏—è', '—É—Å–ª–æ–≤–∏—è', 'if-else', '–ª–æ–≥–∏–∫–∞'],
    content: [
`### –†–∞–∑–≤–∏–ª–∫–∞ –Ω–∞ –¥–æ—Ä–æ–≥–µ
–ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞ ‚Äî —ç—Ç–æ —Ä—ã—Ü–∞—Ä—å, –∫–æ—Ç–æ—Ä—ã–π –¥–æ—à–µ–ª –¥–æ –∫–∞–º–Ω—è —Å –Ω–∞–¥–ø–∏—Å—å—é: "–ù–∞–ª–µ–≤–æ –ø–æ–π–¥–µ—à—å ‚Äî –∫–æ–Ω—è –ø–æ—Ç–µ—Ä—è–µ—à—å, –Ω–∞–ø—Ä–∞–≤–æ –ø–æ–π–¥–µ—à—å ‚Äî –∂–∏–∑–Ω—å –Ω–∞–π–¥–µ—à—å". –ö–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è \`if-elif-else\` ‚Äî —ç—Ç–æ –∏ –µ—Å—Ç—å —Ç–∞–∫–æ–π –∫–∞–º–µ–Ω—å, –∫–æ—Ç–æ—Ä—ã–π –∑–∞—Å—Ç–∞–≤–ª—è–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º—É –≤—ã–±–∏—Ä–∞—Ç—å –æ–¥–∏–Ω –ø—É—Ç—å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Å–ª–æ–≤–∏—è.

- **\`if\` (–ï—Å–ª–∏):** –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–µ—Ä–≤–æ–µ, –≥–ª–∞–≤–Ω–æ–µ —É—Å–ª–æ–≤–∏–µ. –ï—Å–ª–∏ –æ–Ω–æ –ø—Ä–∞–≤–¥–∏–≤–æ (\`True\`), –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∫–æ–¥ –ø–æ–¥ –Ω–∏–º.
- **\`elif\` (–ò–Ω–∞—á–µ –µ—Å–ª–∏):** –ï—Å–ª–∏ \`if\` –æ–∫–∞–∑–∞–ª—Å—è –ª–æ–∂–Ω—ã–º (\`False\`), –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è —ç—Ç–æ —É—Å–ª–æ–≤–∏–µ. \`elif\`'–æ–≤ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–∫–æ–ª—å–∫–æ —É–≥–æ–¥–Ω–æ.
- **\`else\` (–ò–Ω–∞—á–µ):** –ï—Å–ª–∏ –≤–æ–æ–±—â–µ –Ω–∏ –æ–¥–Ω–æ –∏–∑ —É—Å–ª–æ–≤–∏–π –≤—ã—à–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–æ, –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —ç—Ç–æ—Ç –±–ª–æ–∫.

**–í–∞–∂–Ω–æ:** –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–ª–∂–µ–Ω –≤—ã–ø–æ–ª–Ω–∏—Ç—å—Å—è, –ø–∏—à–µ—Ç—Å—è —Å **–æ—Ç—Å—Ç—É–ø–æ–º** (–æ–±—ã—á–Ω–æ 4 –ø—Ä–æ–±–µ–ª–∞). –¢–∞–∫ Python –ø–æ–Ω–∏–º–∞–µ—Ç, —á—Ç–æ —ç—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ —É—Å–ª–æ–≤–∏—é. –ï—Å–ª–∏ –æ—Ç—Å—Ç—É–ø–∞ –Ω–µ –±—É–¥–µ—Ç ‚Äî –±—É–¥–µ—Ç –æ—à–∏–±–∫–∞ \`IndentationError\`!`,
{
  language: 'python',
  code: `age = int(input("–°–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç? "))

if age >= 18:
    print("‚úÖ –î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω. –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!")
elif age >= 14:
    print("ü§î –î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω –≤ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–∏ –≤–∑—Ä–æ—Å–ª—ã—Ö.")
else:
    print("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –í–∞–º –µ—â–µ —Ä–∞–Ω–æ.")`
},
`### –õ–æ–≥–∏—á–µ—Å–∫–∏–µ —Å–æ—é–∑—ã: "–ò", "–ò–õ–ò", "–ù–ï"
–ò–Ω–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ä–∞–∑—É –Ω–µ—Å–∫–æ–ª—å–∫–æ —É—Å–ª–æ–≤–∏–π.
- \`and\` (–ò): –£—Å–ª–æ–≤–∏–µ –ø—Ä–∞–≤–¥–∏–≤–æ, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ **–û–ë–ï** –µ–≥–æ —á–∞—Å—Ç–∏ –ø—Ä–∞–≤–¥–∏–≤—ã.
- \`or\` (–ò–õ–ò): –£—Å–ª–æ–≤–∏–µ –ø—Ä–∞–≤–¥–∏–≤–æ, –µ—Å–ª–∏ **–•–û–¢–Ø –ë–´ –û–î–ù–ê** –∏–∑ –µ–≥–æ —á–∞—Å—Ç–µ–π –ø—Ä–∞–≤–¥–∏–≤–∞.
- \`not\` (–ù–ï): –ü–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç —É—Å–ª–æ–≤–∏–µ –Ω–∞–æ–±–æ—Ä–æ—Ç. \`not True\` —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è \`False\`.`,
{
  language: 'python',
  code: `weather = "–¥–æ–∂–¥—å"
mood = "—Ö–æ—Ä–æ—à–µ–µ"
homework_done = False

# –ü—Ä–æ–≤–µ—Ä—è–µ–º: –ø–æ–≥–æ–¥–∞ "—Å–æ–ª–Ω–µ—á–Ω–∞—è" –ò –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ "—Ö–æ—Ä–æ—à–µ–µ"? –ù–µ—Ç.
if weather == "—Å–æ–ª–Ω–µ—á–Ω–æ" and mood == "—Ö–æ—Ä–æ—à–µ–µ":
    print("–ò–¥–µ–º –≥—É–ª—è—Ç—å –≤ –ø–∞—Ä–∫! ‚òÄÔ∏è")
# –û–∫–µ–π, —Ç–æ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º: –ø–æ–≥–æ–¥–∞ "–¥–æ–∂–¥—å" –ò–õ–ò –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ "—Ö–æ—Ä–æ—à–µ–µ"? –î–∞, –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ —Ö–æ—Ä–æ—à–µ–µ.
elif weather == "–¥–æ–∂–¥—å" or mood == "—Ö–æ—Ä–æ—à–µ–µ":
    print("–ú–æ–∂–Ω–æ –ø–æ—Å–∏–¥–µ—Ç—å –¥–æ–º–∞ –∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–∏–ª—å–º. üçø")
# –ï—Å–ª–∏ –¥–æ–º–∞—à–∫–∞ –ù–ï —Å–¥–µ–ª–∞–Ω–∞
elif not homework_done:
    print("–°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –¥–æ–º–∞—à–∫—É! üìö")
# –ï—Å–ª–∏ –±—ã –≤—Å–µ —É—Å–ª–æ–≤–∏—è –≤—ã—à–µ –±—ã–ª–∏ –ª–æ–∂–Ω—ã–º–∏
else:
    print("–õ—É—á—à–µ –æ—Å—Ç–∞—Ç—å—Å—è –¥–æ–º–∞ –∏ –ª–µ—á—å —Å–ø–∞—Ç—å. üò¥")`
},
`### –í–ª–æ–∂–µ–Ω–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ üéÅ
–ò–Ω–æ–≥–¥–∞ –ø–æ—Å–ª–µ –æ–¥–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –µ—â–µ –æ–¥–Ω—É. –≠—Ç–æ –∫–∞–∫ –æ—Ç–∫—Ä—ã—Ç—å —Å—É–Ω–¥—É–∫, –∞ –≤–Ω—É—Ç—Ä–∏ –Ω–µ–≥–æ –µ—â–µ –æ–¥–∏–Ω, –ø–æ–º–µ–Ω—å—à–µ.`,
{
  language: 'python',
  code: `age = 15
has_ticket = True

if age >= 12:
    print("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É –ø—Ä–æ–π–¥–µ–Ω–∞.")
    # –≠—Ç–æ –≤–ª–æ–∂–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞. –û–Ω–∞ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–µ—Ä–≤–∞—è –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ–π.
    # –û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –¥–≤–æ–π–Ω–æ–π –æ—Ç—Å—Ç—É–ø!
    if has_ticket: # –ú–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å if has_ticket –≤–º–µ—Å—Ç–æ if has_ticket == True
        print("–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∏–ª–µ—Ç–∞ –ø—Ä–æ–π–¥–µ–Ω–∞. –ü—Ä–æ—Ö–æ–¥–∏—Ç–µ –≤ –∫–∏–Ω–æ! üéüÔ∏è")
    else:
        print("–£–ø—Å, —É –≤–∞—Å –Ω–µ—Ç –±–∏–ª–µ—Ç–∞! üò†")
else:
    print("–í—ã —Å–ª–∏—à–∫–æ–º –º–∞–ª—ã –¥–ª—è —ç—Ç–æ–≥–æ —Ñ–∏–ª—å–º–∞. üë∂")`
},
`### ‚≠ê –ü–æ–ø—Ä–æ–±—É–π —Å–∞–º!
–ù–∞–ø–∏—à–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É-—Å–æ–≤–µ—Ç—á–∏–∫. –û–Ω–∞ —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –Ω–∞ —É–ª–∏—Ü–µ (—á–∏—Å–ª–æ–º).
- –ï—Å–ª–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –±–æ–ª—å—à–µ 20, —Å–æ–≤–µ—Ç—É–µ—Ç –Ω–∞–¥–µ—Ç—å —Ñ—É—Ç–±–æ–ª–∫—É.
- –ï—Å–ª–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –º–µ–∂–¥—É 10 –∏ 20 (–≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ), —Å–æ–≤–µ—Ç—É–µ—Ç –Ω–∞–¥–µ—Ç—å —Å–≤–∏—Ç–µ—Ä.
- –ï—Å–ª–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –º–µ–Ω—å—à–µ 10, —Å–æ–≤–µ—Ç—É–µ—Ç –Ω–∞–¥–µ—Ç—å –∫—É—Ä—Ç–∫—É.`
]
  },
  {
    id: 'python-lists',
    title: '–û—Å–Ω–æ–≤—ã Python: –°–ø–∏—Å–∫–∏ (–º–∞—Å—Å–∏–≤—ã) üéí',
    description: '–£—á–∏–º—Å—è —Ö—Ä–∞–Ω–∏—Ç—å –º–Ω–æ–≥–æ –¥–∞–Ω–Ω—ã—Ö –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ. –°–ø–∏—Å–∫–∏ ‚Äî —ç—Ç–æ –∫–∞–∫ —Ä—é–∫–∑–∞–∫ –¥–ª—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, –≤ –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –∫–ª–∞—Å—Ç—å –∏ –¥–æ—Å—Ç–∞–≤–∞—Ç—å –≤–µ—â–∏.',
    category: '–û—Å–Ω–æ–≤—ã Python',
    tags: ['python', '—Å–ø–∏—Å–∫–∏', '–º–∞—Å—Å–∏–≤—ã', '–º–µ—Ç–æ–¥—ã', '—Å—Ä–µ–∑—ã', '–∏–Ω–¥–µ–∫—Å—ã'],
    content: [
`### –ß—Ç–æ —Ç–∞–∫–æ–µ —Å–ø–∏—Å–æ–∫?
–ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —É —Ç–µ–±—è –µ—Å—Ç—å —Ä—é–∫–∑–∞–∫. –¢—ã –º–æ–∂–µ—à—å –∫–ª–∞—Å—Ç—å –≤ –Ω–µ–≥–æ —Ä–∞–∑–Ω—ã–µ –≤–µ—â–∏: –∫–Ω–∏–≥—É, —è–±–ª–æ–∫–æ, —Ç–µ–ª–µ—Ñ–æ–Ω. **–°–ø–∏—Å–æ–∫ (list)** –≤ Python ‚Äî —ç—Ç–æ —Ç–∞–∫–æ–π –∂–µ "—Ä—é–∫–∑–∞–∫" –¥–ª—è –¥–∞–Ω–Ω—ã—Ö. –≠—Ç–æ —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è, –≥–¥–µ —É –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –µ—Å—Ç—å —Å–≤–æ–π **–Ω–æ–º–µ—Ä (–∏–Ω–¥–µ–∫—Å)**.

**–°–∞–º–æ–µ –≥–ª–∞–≤–Ω–æ–µ:** –Ω—É–º–µ—Ä–∞—Ü–∏—è –≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –≤—Å–µ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å **–ù–£–õ–Ø**! –ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏–º–µ–µ—Ç –∏–Ω–¥–µ–∫—Å 0, –≤—Ç–æ—Ä–æ–π ‚Äî 1, –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ.`,
{
  language: 'python',
  code: `# –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫
#             –∏–Ω–¥–µ–∫—Å 0      1         2        3         4
shopping_list = ["–•–ª–µ–±", "–ú–æ–ª–æ–∫–æ", "–Ø–π—Ü–∞", "–°—ã—Ä", "–ö–æ–ª–±–∞—Å–∞"]

# –î–æ—Å—Ç–∞–µ–º —á—Ç–æ-—Ç–æ –æ–¥–Ω–æ –ø–æ –µ–≥–æ –Ω–æ–º–µ—Ä—É (–∏–Ω–¥–µ–∫—Å—É)
print(f"–ü–µ—Ä–≤—ã–π –≤ —Å–ø–∏—Å–∫–µ: {shopping_list[0]}")  # –•–ª–µ–±
print(f"–¢—Ä–µ—Ç–∏–π –≤ —Å–ø–∏—Å–∫–µ: {shopping_list[2]}")  # –Ø–π—Ü–∞

# –ú–æ–∂–Ω–æ –ø–æ–º–µ–Ω—è—Ç—å —ç–ª–µ–º–µ–Ω—Ç –ø–æ –µ–≥–æ –∏–Ω–¥–µ–∫—Å—É
print(f"–°—Ç–∞—Ä—ã–π —Å–ø–∏—Å–æ–∫: {shopping_list}")
shopping_list[1] = "–ö–µ—Ñ–∏—Ä" # –í–º–µ—Å—Ç–æ –º–æ–ª–æ–∫–∞ —Ç–µ–ø–µ—Ä—å –∫–µ—Ñ–∏—Ä
print(f"–ù–æ–≤—ã–π —Å–ø–∏—Å–æ–∫: {shopping_list}")`
},
`### –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Å–ø–∏—Å–∫–æ–≤
–°–ø–∏—Å–∫–∏ –æ—á–µ–Ω—å –º–æ—â–Ω—ã–µ, —É –Ω–∏—Ö –º–Ω–æ–≥–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö "—É–º–µ–Ω–∏–π" (–º–µ—Ç–æ–¥–æ–≤).

- \`.append(—ç–ª–µ–º–µ–Ω—Ç)\` ‚Äî –¥–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ **–∫–æ–Ω–µ—Ü** —Å–ø–∏—Å–∫–∞.
- \`.pop(–∏–Ω–¥–µ–∫—Å)\` ‚Äî —É–¥–∞–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç –ø–æ –∏–Ω–¥–µ–∫—Å—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ. –ï—Å–ª–∏ –∏–Ω–¥–µ–∫—Å –Ω–µ —É–∫–∞–∑–∞—Ç—å, —É–¥–∞–ª–∏—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–π.
- \`.remove(–∑–Ω–∞—á–µ–Ω–∏–µ)\` ‚Äî —É–¥–∞–ª—è–µ—Ç –ø–µ—Ä–≤—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å —Ç–∞–∫–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ–º.
- \`len(—Å–ø–∏—Å–æ–∫)\` ‚Äî —É–∑–Ω–∞–µ—Ç, —Å–∫–æ–ª—å–∫–æ –≤—Å–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Å–ø–∏—Å–∫–µ (–¥–ª–∏–Ω—É).
- \`—ç–ª–µ–º–µ–Ω—Ç in —Å–ø–∏—Å–æ–∫\` ‚Äî –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–æ–π —ç–ª–µ–º–µ–Ω—Ç –≤ —Å–ø–∏—Å–∫–µ (–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç \`True\` –∏–ª–∏ \`False\`).`,
{
    language: 'python',
    code: `# –ù–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –≤ –∏–≥—Ä–µ
inventory = ["–ú–µ—á", "–©–∏—Ç", "–•–ª–µ–±"]
print(f"–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å: {inventory}")
print(f"–ü—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ: {len(inventory)}") # 3

# –ú—ã –Ω–∞—à–ª–∏ –∑–µ–ª—å–µ! –î–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ —Ä—é–∫–∑–∞–∫.
inventory.append("–ó–µ–ª—å–µ")
print(f"–ù–∞—à–ª–∏ –∑–µ–ª—å–µ! –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å: {inventory}")

# –ú—ã —Å—ä–µ–ª–∏ —Ö–ª–µ–±. –£–¥–∞–ª–∏–º –µ–≥–æ.
inventory.remove("–•–ª–µ–±")
print(f"–°—ä–µ–ª–∏ —Ö–ª–µ–±. –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å: {inventory}")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –Ω–∞—Å –º–µ—á?
if "–ú–µ—á" in inventory:
    print("–£—Ä–∞, —É –Ω–∞—Å –µ—Å—Ç—å –º–µ—á –¥–ª—è –∑–∞—â–∏—Ç—ã!")`
},
`### –°—Ä–µ–∑—ã: –±–µ—Ä–µ–º —Å—Ä–∞–∑—É –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ üç∞
–°—Ä–µ–∑—ã –ø–æ–∑–≤–æ–ª—è—é—Ç –ø–æ–ª—É—á–∏—Ç—å –Ω–µ –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç, –∞ —Ü–µ–ª—ã–π –∫—É—Å–æ–∫ —Å–ø–∏—Å–∫–∞. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–∏–Ω—Ç–∞–∫—Å–∏—Å \`[—Å—Ç–∞—Ä—Ç:–∫–æ–Ω–µ—Ü]\`.
- \`—Å—Ç–∞—Ä—Ç\`: –Ω–æ–º–µ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞—á–∏–Ω–∞–µ–º (–≤–∫–ª—é—á–∞—è –µ–≥–æ).
- \`–∫–æ–Ω–µ—Ü\`: –Ω–æ–º–µ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ–º (–ù–ï –≤–∫–ª—é—á–∞—è –µ–≥–æ!).`,
{
  language: 'python',
  code: `//                          0        1        2       3        4
inventory = ["–ú–µ—á", "–©–∏—Ç", "–ó–µ–ª—å–µ", "–•–ª–µ–±", "–ö–∞—Ä—Ç–∞"]

// –ë–µ—Ä–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å 1-–≥–æ –ø–æ 3-–π (—Ç–æ –µ—Å—Ç—å 1-–π –∏ 2-–π)
first_items = inventory[1:3]
print(f"–ü–µ—Ä–≤—ã–µ –¥–≤–∞ –ø—Ä–µ–¥–º–µ—Ç–∞: {first_items}") // ['–©–∏—Ç', '–ó–µ–ª—å–µ']

// –ï—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞—Ç—å –Ω–∞—á–∞–ª–æ, —Å—Ä–µ–∑ –ø–æ–π–¥–µ—Ç —Å —Å–∞–º–æ–≥–æ –Ω–∞—á–∞–ª–∞
first_two = inventory[:2]
print(f"–ü–µ—Ä–≤—ã–µ –¥–≤–∞: {first_two}") // ['–ú–µ—á', '–©–∏—Ç']

// –ï—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞—Ç—å –∫–æ–Ω–µ—Ü, —Å—Ä–µ–∑ –ø–æ–π–¥–µ—Ç –¥–æ —Å–∞–º–æ–≥–æ –∫–æ–Ω—Ü–∞
all_but_first = inventory[1:]
print(f"–í—Å–µ, –∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–≥–æ: {all_but_first}") // ['–©–∏—Ç', '–ó–µ–ª—å–µ', '–•–ª–µ–±', '–ö–∞—Ä—Ç–∞']`
},
`### ‚≠ê –ü–æ–ø—Ä–æ–±—É–π —Å–∞–º!
–°–æ–∑–¥–∞–π —Å–ø–∏—Å–æ–∫ –¥–µ–ª –Ω–∞ —Å–µ–≥–æ–¥–Ω—è.
1. –î–æ–±–∞–≤—å –≤ –Ω–µ–≥–æ 3-4 –¥–µ–ª–∞.
2. –ü–æ—Ç–æ–º –¥–æ–±–∞–≤—å –µ—â–µ –æ–¥–Ω–æ –≤–∞–∂–Ω–æ–µ –¥–µ–ª–æ –≤ –∫–æ–Ω–µ—Ü.
3. –ü–æ—Ç–æ–º "–≤—ã–ø–æ–ª–Ω–∏" (—É–¥–∞–ª–∏) —Å–∞–º–æ–µ –ø–µ—Ä–≤–æ–µ –¥–µ–ª–æ.
4. –í –∫–æ–Ω—Ü–µ –≤—ã–≤–µ–¥–∏ –Ω–∞ —ç–∫—Ä–∞–Ω –Ω–∞–¥–ø–∏—Å—å "–û—Å—Ç–∞–ª–æ—Å—å —Å–¥–µ–ª–∞—Ç—å:" –∏ —Å–∞–º —Å–ø–∏—Å–æ–∫ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –¥–µ–ª.`
]
  },
  {
    id: 'python-loops',
    title: '–û—Å–Ω–æ–≤—ã Python: –¶–∏–∫–ª for üîÅ',
    description: '–ó–∞—Å—Ç–∞–≤–ª—è–µ–º –∫–æ–º–ø—å—é—Ç–µ—Ä –¥–µ–ª–∞—Ç—å –æ–¥–Ω–æ—Ç–∏–ø–Ω—É—é —Ä–∞–±–æ—Ç—É –∑–∞ –Ω–∞—Å. –ò–∑—É—á–∞–µ–º, –∫–∞–∫ "–ø—Ä–æ–±–µ–∂–∞—Ç—å—Å—è" –ø–æ —Å–ø–∏—Å–∫—É –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `range`.',
    category: '–û—Å–Ω–æ–≤—ã Python',
    tags: ['python', '—Ü–∏–∫–ª—ã', 'for', 'range', '–∏—Ç–µ—Ä–∞—Ü–∏—è'],
    content: [
`–¶–∏–∫–ª—ã –Ω—É–∂–Ω—ã, —á—Ç–æ–±—ã –ø–æ–≤—Ç–æ—Ä—è—Ç—å –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –∫–æ–¥ –º–Ω–æ–≥–æ —Ä–∞–∑, –Ω–µ –∫–æ–ø–∏—Ä—É—è –µ–≥–æ.

### –¶–∏–∫–ª \`for\` –¥–ª—è —Å–ø–∏—Å–∫–æ–≤
–¶–∏–∫–ª \`for\` –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç, —á—Ç–æ–±—ã "–ø—Ä–æ–±–µ–∂–∞—Ç—å—Å—è" –ø–æ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –≤ —Å–ø–∏—Å–∫–µ –∏ —á—Ç–æ-—Ç–æ —Å –Ω–∏–º —Å–¥–µ–ª–∞—Ç—å.`,
{
  language: 'python',
  code: `friends = ["–ê–Ω—è", "–ë–æ—Ä—è", "–í–∏–∫–∞", "–ì–ª–µ–±"]

# "–î–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–º–µ–Ω–∏ 'friend' –≤ —Å–ø–∏—Å–∫–µ 'friends'..."
print("–°–ø–∏—Å–æ–∫ –º–æ–∏—Ö –¥—Ä—É–∑–µ–π:")
for friend in friends:
  # –≠—Ç–æ—Ç –∫–æ–¥ —Å –æ—Ç—Å—Ç—É–ø–æ–º –ø–æ–≤—Ç–æ—Ä–∏—Ç—Å—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ø–∏—Å–∫–∞
  print(f"- {friend}")

print("–ü–æ—Ä–∞ –≤ —à–∫–æ–ª—É!")`
},
`### –¶–∏–∫–ª \`for\` –∏ –≤–æ–ª—à–µ–±–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ \`range()\`
–ß–∞—Å—Ç–æ –Ω—É–∂–Ω–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å —á—Ç–æ-—Ç–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑. –î–ª—è —ç—Ç–æ–≥–æ –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç \`range()\`.
- \`range(5)\` —Å–æ–∑–¥–∞–µ—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —á–∏—Å–µ–ª –æ—Ç 0 –¥–æ 4 (–≤—Å–µ–≥–æ 5 —á–∏—Å–µ–ª).
- \`range(1, 6)\` —Å–æ–∑–¥–∞–µ—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ—Ç 1 –¥–æ 5.
- \`range(0, 10, 2)\` —Å–æ–∑–¥–∞–µ—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ—Ç 0 –¥–æ 9, –Ω–æ —Å —à–∞–≥–æ–º 2 (0, 2, 4, 6, 8).`,
{
  language: 'python',
  code: `// "–î–ª—è –∫–∞–∂–¥–æ–≥–æ —á–∏—Å–ª–∞ i –≤ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –æ—Ç 0 –¥–æ 4..."
for i in range(5):
  print(f"–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä! (–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–æ–º–µ—Ä {i})")

print("---")

// –ù–∞–ø–µ—á–∞—Ç–∞–µ—Ç —á–∏—Å–ª–∞ –æ—Ç 1 –¥–æ 5
print("–°—á–∏—Ç–∞–µ–º –¥–æ –ø—è—Ç–∏:")
for number in range(1, 6):
    print(number)

print("---")

# –ù–∞–ø–µ—á–∞—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ —á–µ—Ç–Ω—ã–µ —á–∏—Å–ª–∞ –¥–æ 10
print("–ß–µ—Ç–Ω—ã–µ —á–∏—Å–ª–∞:")
for i in range(0, 11, 2):
    print(i)`
},
`### –í–ª–æ–∂–µ–Ω–Ω—ã–µ —Ü–∏–∫–ª—ã: —Ü–∏–∫–ª –≤ —Ü–∏–∫–ª–µ ü§Ø
–≠—Ç–æ –∫–∞–∫ —á–∞—Å–æ–≤–∞—è –∏ –º–∏–Ω—É—Ç–Ω–∞—è —Å—Ç—Ä–µ–ª–∫–∏. –ü–æ–∫–∞ —á–∞—Å–æ–≤–∞—è —Å—Ç—Ä–µ–ª–∫–∞ —Å–¥–µ–ª–∞–µ—Ç –æ–¥–∏–Ω —à–∞–≥, –º–∏–Ω—É—Ç–Ω–∞—è –¥–æ–ª–∂–Ω–∞ –ø—Ä–æ–±–µ–∂–∞—Ç—å —Ü–µ–ª—ã–π –∫—Ä—É–≥.
–ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —É —Ç–µ–±—è –µ—Å—Ç—å 5 –∫–æ—Ä–æ–±–æ–∫, –∏ –≤ –∫–∞–∂–¥–æ–π –∏–∑ –Ω–∏—Ö –ø–æ 3 –º—è—á–∞. –ß—Ç–æ–±—ã –ø–µ—Ä–µ—Å—á–∏—Ç–∞—Ç—å –≤—Å–µ –º—è—á–∏, —Ç—ã –±–µ—Ä–µ—à—å –ø–µ—Ä–≤—É—é –∫–æ—Ä–æ–±–∫—É –∏ —Å—á–∏—Ç–∞–µ—à—å –≤ –Ω–µ–π 3 –º—è—á–∞, –ø–æ—Ç–æ–º –≤—Ç–æ—Ä—É—é –∏ –≤ –Ω–µ–π 3, –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ. –≠—Ç–æ –∏ –µ—Å—Ç—å –≤–ª–æ–∂–µ–Ω–Ω—ã–π —Ü–∏–∫–ª.

–î–∞–≤–∞–π—Ç–µ –Ω–∞–ø–µ—á–∞—Ç–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —É–º–Ω–æ–∂–µ–Ω–∏—è!`,
{
  language: 'python',
  code: `# –í–Ω–µ—à–Ω–∏–π —Ü–∏–∫–ª –¥–ª—è —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ 9
for i in range(1, 10):
    # –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Ü–∏–∫–ª —Ç–æ–∂–µ –¥–ª—è —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ 9
    for j in range(1, 10):
        # end="\\t" - —ç—Ç–æ —á—Ç–æ–±—ã print –Ω–µ –ø–µ—Ä–µ–Ω–æ—Å–∏–ª —Å—Ç—Ä–æ–∫—É, –∞ —Å—Ç–∞–≤–∏–ª –∫—Ä–∞—Å–∏–≤—ã–π –æ—Ç—Å—Ç—É–ø (—Ç–∞–±—É–ª—è—Ü–∏—é)
        # –¢–∞–∫ —á–∏—Å–ª–∞ –≤—ã—Å—Ç—Ä–∞–∏–≤–∞—é—Ç—Å—è –≤ —Ä–æ–≤–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏.
        print(i * j, end="\\t")
    # –ö–æ–≥–¥–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Ü–∏–∫–ª –∑–∞–∫–æ–Ω—á–∏–ª —Å–≤–æ—é —Ä–∞–±–æ—Ç—É (–¥–ª—è –æ–¥–Ω–æ–≥–æ —á–∏—Å–ª–∞ i),
    # –º—ã –¥–µ–ª–∞–µ–º –ø—É—Å—Ç–æ–π print(), —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ä—è–¥–∞ —Ç–∞–±–ª–∏—Ü—ã.
    print("")`
},
]
  },
  // =================================================================
  // –ù–û–í–´–ô –ö–£–†–°!
  // =================================================================
  {
    id: 'python-while-break',
    title: '–û—Å–Ω–æ–≤—ã Python: –¶–∏–∫–ª while –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ üö¶',
    description: '–ò–∑—É—á–∞–µ–º —Ü–∏–∫–ª, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–±–æ—Ç–∞–µ—Ç "–ø–æ–∫–∞ —É—Å–ª–æ–≤–∏–µ –∏—Å—Ç–∏–Ω–Ω–æ". –£—á–∏–º—Å—è —É–ø—Ä–∞–≤–ª—è—Ç—å —Ü–∏–∫–ª–∞–º–∏ —Å –ø–æ–º–æ—â—å—é `break` –∏ `continue`.',
    category: '–û—Å–Ω–æ–≤—ã Python',
    tags: ['python', '—Ü–∏–∫–ª—ã', 'while', 'break', 'continue', '–±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª'],
    content: [
`### –ß—Ç–æ —Ç–∞–∫–æ–µ —Ü–∏–∫–ª \`while\`?
–ï—Å–ª–∏ —Ü–∏–∫–ª \`for\` –ø–æ—Ö–æ–∂ –Ω–∞ –ø–æ–µ–∑–¥, –∫–æ—Ç–æ—Ä—ã–π –µ–¥–µ—Ç –æ—Ç —Å—Ç–∞–Ω—Ü–∏–∏ –ê –¥–æ —Å—Ç–∞–Ω—Ü–∏–∏ –ë, —Ç–æ —Ü–∏–∫–ª \`while\` (–ø–æ–∫–∞) ‚Äî —ç—Ç–æ –æ—Ö—Ä–∞–Ω–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π —Å—Ç–æ–∏—Ç –Ω–∞ –ø–æ—Å—Ç—É, **–ü–û–ö–ê** –≥–æ—Ä–∏—Ç –∑–µ–ª–µ–Ω–∞—è –ª–∞–º–ø–æ—á–∫–∞. –ö–∞–∫ —Ç–æ–ª—å–∫–æ –ª–∞–º–ø–æ—á–∫–∞ –ø–æ–≥–∞—Å–Ω–µ—Ç (—É—Å–ª–æ–≤–∏–µ —Å—Ç–∞–Ω–µ—Ç \`False\`), –æ–Ω —É—Ö–æ–¥–∏—Ç.

–¶–∏–∫–ª \`while\` –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç, –∫–æ–≥–¥–∞ –º—ã –Ω–µ –∑–Ω–∞–µ–º —Ç–æ—á–Ω–æ, —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –Ω—É–∂–Ω–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ.`,
{
  language: 'python',
  code: `health = 100
print(f"–ù–∞—á–∏–Ω–∞–µ–º –±–æ–π! –í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ: {health}")

# –¶–∏–∫–ª –±—É–¥–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å—Å—è, –ü–û–ö–ê –∑–¥–æ—Ä–æ–≤—å–µ –±–æ–ª—å—à–µ 0.
while health > 0:
    print(f"–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ —É–¥–∞—Ä! –í–∞—à–µ —Ç–µ–∫—É—â–µ–µ –∑–¥–æ—Ä–æ–≤—å–µ: {health}")
    # –í–∞–∂–Ω–æ! –í–Ω—É—Ç—Ä–∏ —Ü–∏–∫–ª–∞ while –Ω—É–∂–Ω–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –º–µ–Ω—è—Ç—å —É—Å–ª–æ–≤–∏–µ.
    # –ò–Ω–∞—á–µ —Ü–∏–∫–ª —Å—Ç–∞–Ω–µ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–º!
    health -= 10 # –£–º–µ–Ω—å—à–∞–µ–º –∑–¥–æ—Ä–æ–≤—å–µ –Ω–∞ 10 (—Ç–æ –∂–µ —Å–∞–º–æ–µ —á—Ç–æ health = health - 10)

print(f"–ë–æ–π –æ–∫–æ–Ω—á–µ–Ω! –í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ: {health}. –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏.")`
},
`### –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª –∏ –∫–æ–º–∞–Ω–¥–∞ \`break\`
–ò–Ω–æ–≥–¥–∞ —É–¥–æ–±–Ω–æ —Å–¥–µ–ª–∞—Ç—å "–≤–µ—á–Ω—ã–π" —Ü–∏–∫–ª —Å –ø–æ–º–æ—â—å—é \`while True\`, –∞ –≤—ã—Ö–æ–¥–∏—Ç—å –∏–∑ –Ω–µ–≥–æ –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ.
- \`break\` (—Å–ª–æ–º–∞—Ç—å) ‚Äî –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ **–ø—Ä–µ—Ä—ã–≤–∞–µ—Ç** –∏ –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ —Ü–∏–∫–ª–∞.

–≠—Ç–æ –æ—á–µ–Ω—å –ø–æ–ø—É–ª—è—Ä–Ω—ã–π –ø—Ä–∏–µ–º –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–Ω—é –∏–ª–∏ —á–∞—Ç–æ–≤.`,
{
  language: 'python',
  code: `print("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç–∞–≤–µ—Ä–Ω—É '–¢—Ä–∏ –ì–Ω–æ–º–∞'! –í–≤–µ–¥–∏—Ç–µ '–≤—ã—Ö–æ–¥', —á—Ç–æ–±—ã —É–π—Ç–∏.")

while True: # –≠—Ç–æ—Ç —Ü–∏–∫–ª –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤–µ—á–Ω–æ...
    command = input("> –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: ")
    print(f"–í—ã –≤–≤–µ–ª–∏: '{command}'")
    
    if command == "–≤—ã—Ö–æ–¥":
        print("–í—ã –≤—ã—à–ª–∏ –∏–∑ —Ç–∞–≤–µ—Ä–Ω—ã. –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
        break # ...–Ω–æ –∫–æ–º–∞–Ω–¥–∞ break –µ–≥–æ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç!

print("–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")`
},
`### –ö–æ–º–∞–Ω–¥–∞ \`continue\`
- \`continue\` (–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å) ‚Äî –Ω–µ –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ —Ü–∏–∫–ª–∞, –∞ **–ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç** –≤—Å—ë, —á—Ç–æ –∏–¥–µ—Ç –ø–æ—Å–ª–µ, –∏ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É (–∏—Ç–µ—Ä–∞—Ü–∏–∏).`,
{
  language: 'python',
  code: `# –ú—ã —Ö–æ—Ç–∏–º –Ω–∞–ø–µ—á–∞—Ç–∞—Ç—å –≤—Å–µ —á–∏—Å–ª–∞ –æ—Ç 0 –¥–æ 10, –∫—Ä–æ–º–µ 5 –∏ 7
print("–ü–µ—á–∞—Ç–∞–µ–º —á–∏—Å–ª–∞ —Å –ø—Ä–æ–ø—É—Å–∫–∞–º–∏:")
for i in range(11):
    if i == 5 or i == 7:
        continue # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —á–∏—Å–ª–∞ 5 –∏ 7, –∏ –∏–¥–µ–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É i
    
    print(i)`
},
`### ‚≠ê –ü–æ–ø—Ä–æ–±—É–π —Å–∞–º!
–ò—Å–ø–æ–ª—å–∑—É—è \`while True\` –∏ \`break\`, –Ω–∞–ø–∏—à–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É-–∫–æ–ø–∏–ª–∫—É.
1. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –≤ —Ü–∏–∫–ª–µ —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç: "–°–∫–æ–ª—å–∫–æ –ø–æ–ª–æ–∂–∏—Ç—å –≤ –∫–æ–ø–∏–ª–∫—É?".
2. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —á–∏—Å–ª–æ, –∏ –æ–Ω–æ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –∫ –æ–±—â–µ–π —Å—É–º–º–µ.
3. –ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø–∏—à–µ—Ç: "–í –∫–æ–ø–∏–ª–∫–µ —É–∂–µ [—Å—É–º–º–∞] –º–æ–Ω–µ—Ç."
4. –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –Ω–µ —á–∏—Å–ª–æ, –∞ —Å–ª–æ–≤–æ "—Å—Ç–æ–ø", –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è.`
]
  },
  {
    id: 'python-dicts',
    title: '–û—Å–Ω–æ–≤—ã Python: –°–ª–æ–≤–∞—Ä–∏ üìá',
    description: '–•—Ä–∞–Ω–∏–º –¥–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–∏ "–∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–∏–µ". –°–ª–æ–≤–∞—Ä–∏ ‚Äî –∫–∞–∫ –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –≤ –∏–≥—Ä–µ –∏–ª–∏ –∞–Ω–∫–µ—Ç–∞.',
    category: '–û—Å–Ω–æ–≤—ã Python',
    tags: ['python', '—Å–ª–æ–≤–∞—Ä–∏', '—Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö', 'json', '–∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–∏–µ'],
    content: [
`### –ß—Ç–æ —Ç–∞–∫–æ–µ —Å–ª–æ–≤–∞—Ä—å?
–ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ (—Ä—é–∫–∑–∞–∫) —Ö—Ä–∞–Ω–∏—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ –Ω–æ–º–µ—Ä–∞–º (0, 1, 2...), —Ç–æ **—Å–ª–æ–≤–∞—Ä—å (dict)** ‚Äî —ç—Ç–æ –∫–∞–∫ –∞–Ω–∫–µ—Ç–∞ –∏–ª–∏ –∫–∞—Ä—Ç–æ—á–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞. –£ –∫–∞–∂–¥–æ–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –µ—Å—Ç—å —Å–≤–æ–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ (**–∫–ª—é—á**) –∏ –µ–µ **–∑–Ω–∞—á–µ–Ω–∏–µ**. –ù–∞–ø—Ä–∏–º–µ—Ä: \`"–∑–¥–æ—Ä–æ–≤—å–µ": 100\`, \`"–º–∞–Ω–∞": 50\`.

–ö–ª—é—á–∏ ‚Äî —ç—Ç–æ –≤—Å–µ–≥–¥–∞ —Ç–µ–∫—Å—Ç (–∏–ª–∏ —á–∏—Å–ª–∞), –∞ –∑–Ω–∞—á–µ–Ω–∏—è –º–æ–≥—É—Ç –±—ã—Ç—å —á–µ–º —É–≥–æ–¥–Ω–æ: —Ç–µ–∫—Å—Ç–æ–º, —á–∏—Å–ª–æ–º, –¥—Ä—É–≥–∏–º —Å–ø–∏—Å–∫–æ–º –∏–ª–∏ –¥–∞–∂–µ –¥—Ä—É–≥–∏–º —Å–ª–æ–≤–∞—Ä–µ–º!`,
{
  language: 'python',
  code: `# –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
character = {
    "–∏–º—è": "–ì—ç–Ω–¥–∞–ª—å—Ñ",
    "–∫–ª–∞—Å—Å": "–í–æ–ª—à–µ–±–Ω–∏–∫",
    "–∑–¥–æ—Ä–æ–≤—å–µ": 80,
    "–º–∞–Ω–∞": 150,
    "–≤_–∫–æ–º–∞–Ω–¥–µ": True,
    "–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å": ["–ü–æ—Å–æ—Ö", "–¢—Ä—É–±–∫–∞", "–ö–Ω–∏–≥–∞ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–π"]
}

# –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –º–∞–Ω—É, –º—ã –æ–±—Ä–∞—â–∞–µ–º—Å—è –∫ –∫–ª—é—á—É "–º–∞–Ω–∞"
print(f"–ú–∞–Ω–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞: {character['–º–∞–Ω–∞']}")

# –ú–æ–∂–Ω–æ –ª–µ–≥–∫–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫—É
character["–æ—Ä—É–∂–∏–µ"] = "–ü–æ—Å–æ—Ö '–ü–ª–∞–º—è –ê–Ω–æ—Ä–∞'"
print(f"–ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–∞—à–µ–ª –Ω–æ–≤–æ–µ –æ—Ä—É–∂–∏–µ!")

# –ò–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é
character["–∑–¥–æ—Ä–æ–≤—å–µ"] = 95
print(f"–ü–µ—Ä—Å–æ–Ω–∞–∂ –≤—ã–ø–∏–ª –∑–µ–ª—å–µ. –ó–¥–æ—Ä–æ–≤—å–µ —Ç–µ–ø–µ—Ä—å: {character['–∑–¥–æ—Ä–æ–≤—å–µ']}")

# –ú–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å, –∫–∞–∫–æ–π –ø—Ä–µ–¥–º–µ—Ç –ø–µ—Ä–≤—ã–π –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ
print(f"–ü–µ—Ä–≤—ã–π –ø—Ä–µ–¥–º–µ—Ç –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ: {character['–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å'][0]}")`
},
`### –ö–∞–∫ –±–µ–∑–æ–ø–∞—Å–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å —Å–æ —Å–ª–æ–≤–∞—Ä—è–º–∏
–ï—Å–ª–∏ —Ç—ã –ø–æ–ø—Ä–æ–±—É–µ—à—å –¥–æ—Å—Ç–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ –∫–ª—é—á—É, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ—Ç, –ø—Ä–æ–≥—Ä–∞–º–º–∞ –≤—ã–¥–∞—Å—Ç –æ—à–∏–±–∫—É \`KeyError\`. –≠—Ç–æ–≥–æ –º–æ–∂–Ω–æ –∏–∑–±–µ–∂–∞—Ç—å.
- \`–∫–ª—é—á in —Å–ª–æ–≤–∞—Ä—å\` ‚Äî –ø—Ä–æ–≤–µ—Ä–∏—Ç, –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–æ–π –∫–ª—é—á.
- \`.get(–∫–ª—é—á, –∑–Ω–∞—á–µ–Ω–∏–µ_–ø–æ_—É–º–æ–ª—á–∞–Ω–∏—é)\` ‚Äî –ø–æ–ø—ã—Ç–∞–µ—Ç—Å—è –¥–æ—Å—Ç–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ. –ï—Å–ª–∏ –∫–ª—é—á–∞ –Ω–µ—Ç, –≤–µ—Ä–Ω–µ—Ç –Ω–µ –æ—à–∏–±–∫—É, –∞ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (–Ω–∞–ø—Ä–∏–º–µ—Ä, \`None\` –∏–ª–∏ —Ç–æ, —á—Ç–æ —Ç—ã —É–∫–∞–∂–µ—à—å).`,
{
  language: 'python',
  code: `hero = {"name": "–ê—Ä–∞–≥–æ—Ä–Ω", "level": 10}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –≥–µ—Ä–æ—è –∫–ª—é—á "—Å–∏–ª–∞"
if "—Å–∏–ª–∞" in hero:
    print(f"–°–∏–ª–∞ –≥–µ—Ä–æ—è: {hero['—Å–∏–ª–∞']}")
else:
    print("–£ –≥–µ—Ä–æ—è –µ—â–µ –Ω–µ—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ '—Å–∏–ª–∞'")

# –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é .get()
# –ï—Å–ª–∏ –∫–ª—é—á–∞ 'weapon' –Ω–µ—Ç, –≤–µ—Ä–Ω–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ '–†—É–∫–∏'
weapon = hero.get("weapon", "–†—É–∫–∏")
print(f"–û—Ä—É–∂–∏–µ –≥–µ—Ä–æ—è: {weapon}")`
},
`### –ö–∞–∫ –ø–µ—Ä–µ–±—Ä–∞—Ç—å –≤—Å–µ –≤ —Å–ª–æ–≤–∞—Ä–µ?
–ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ü–∏–∫–ª \`for\`, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –∫–ª—é—á–∏ –∏ –∑–Ω–∞—á–µ–Ω–∏—è.`,
{
    language: 'python',
    code: `student_grades = {"–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞": 5, "–ò—Å—Ç–æ—Ä–∏—è": 4, "–•–∏–º–∏—è": 5, "–§–∏–∑–∫—É–ª—å—Ç—É—Ä–∞": 3}

print("--- –û—Ü–µ–Ω–∫–∏ —É—á–µ–Ω–∏–∫–∞ ---")
# –ú–µ—Ç–æ–¥ .items() –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤ —Ü–∏–∫–ª–µ —Å—Ä–∞–∑—É –ø–æ–ª—É—á–∞—Ç—å –∏ –∫–ª—é—á, –∏ –∑–Ω–∞—á–µ–Ω–∏–µ
for subject, grade in student_grades.items():
    print(f"–ü—Ä–µ–¥–º–µ—Ç: {subject}, –û—Ü–µ–Ω–∫–∞: {grade}")

# –ú–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–ª—å–∫–æ –≤—Å–µ –∫–ª—é—á–∏ –∏–ª–∏ —Ç–æ–ª—å–∫–æ –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è
print(f"\\n–í—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã: {student_grades.keys()}")
print(f"–í—Å–µ –æ—Ü–µ–Ω–∫–∏: {student_grades.values()}")`
}
]
  },
  {
    id: 'python-functions',
    title: '–û—Å–Ω–æ–≤—ã Python: –§—É–Ω–∫—Ü–∏–∏ (–†–µ—Ü–µ–ø—Ç—ã) üìú',
    description: '–°–æ–∑–¥–∞–µ–º "—Ä–µ—Ü–µ–ø—Ç—ã" –¥–ª—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º–∏, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –∫–æ–¥ —á–∏—â–µ, —É–¥–æ–±–Ω–µ–µ –∏ –Ω–µ –ø–æ–≤—Ç–æ—Ä—è—Ç—å—Å—è.',
    category: '–û—Å–Ω–æ–≤—ã Python',
    tags: ['python', '—Ñ—É–Ω–∫—Ü–∏–∏', 'def', 'return', '–∞—Ä–≥—É–º–µ–Ω—Ç—ã', 'DRY'],
    content: [
`### –ó–∞—á–µ–º –Ω—É–∂–Ω—ã —Ñ—É–Ω–∫—Ü–∏–∏?
**–§—É–Ω–∫—Ü–∏—è** ‚Äî —ç—Ç–æ –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–π "—Ä–µ—Ü–µ–ø—Ç" (–±–ª–æ–∫ –∫–æ–¥–∞), –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ "–ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å" (–≤—ã–∑–≤–∞—Ç—å) –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –ø–æ –µ–≥–æ –∏–º–µ–Ω–∏. –≠—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –Ω–µ –ø–æ–≤—Ç–æ—Ä—è—Ç—å –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –∫–æ–¥ –º–Ω–æ–≥–æ —Ä–∞–∑. –ï—Å–ª–∏ —Ç—ã –≤–∏–¥–∏—à—å, —á—Ç–æ –∫–æ–ø–∏—Ä—É–µ—à—å –∏ –≤—Å—Ç–∞–≤–ª—è–µ—à—å –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –∫—É—Å–æ–∫ –∫–æ–¥–∞ ‚Äî —ç—Ç–æ –∑–Ω–∞–∫, —á—Ç–æ –ø–æ—Ä–∞ —Å–æ–∑–¥–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é! –≠—Ç–æ—Ç –ø—Ä–∏–Ω—Ü–∏–ø –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è **DRY (Don't Repeat Yourself - –ù–µ –ø–æ–≤—Ç–æ—Ä—è–π—Å—è)**.

- \`def\` (–æ—Ç define - –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å) ‚Äî –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏.
- \`return\` (–≤–µ—Ä–Ω—É—Ç—å) ‚Äî –∫–æ–º–∞–Ω–¥–∞, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–¥–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏ "–Ω–∞—Ä—É–∂—É".`,
{
  language: 'python',
  code: `# –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é (—Ä–µ—Ü–µ–ø—Ç) –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø–ª–æ—â–∞–¥–∏ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
# –£ –Ω–µ–µ –¥–≤–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö "–∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞" (–∞—Ä–≥—É–º–µ–Ω—Ç–∞): length –∏ width
def calculate_area(length, width):
  print(f"–°—á–∏—Ç–∞—é –ø–ª–æ—â–∞–¥—å –¥–ª—è –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ {length}x{width}...")
  area = length * width
  return area # –û—Ç–¥–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç

# "–ì–æ—Ç–æ–≤–∏–º" (–≤—ã–∑—ã–≤–∞–µ–º) –Ω–∞—à —Ä–µ—Ü–µ–ø—Ç –¥–ª—è —Ç–æ—Ä—Ç–∞ —Ä–∞–∑–º–µ—Ä–æ–º 10 –Ω–∞ 5
# –†–µ–∑—É–ª—å—Ç–∞—Ç, –∫–æ—Ç–æ—Ä—ã–π –≤–µ—Ä–Ω—É–ª–∞ —Ñ—É–Ω–∫—Ü–∏—è, –º—ã —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
cake_area = calculate_area(10, 5)
print(f"–ü–ª–æ—â–∞–¥—å —Ç–æ—Ä—Ç–∞: {cake_area} —Å–º¬≤")

print("---")

# –ú–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ—Ç –∂–µ —Ä–µ—Ü–µ–ø—Ç –¥–ª—è –¥—Ä—É–≥–æ–≥–æ "—Ç–æ—Ä—Ç–∞"
table_area = calculate_area(120, 80)
print(f"–ü–ª–æ—â–∞–¥—å —Å—Ç–æ–ª–∞: {table_area} —Å–º¬≤")`
},
`### –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
–ò–Ω–æ–≥–¥–∞ —É —Ä–µ—Ü–µ–ø—Ç–∞ –µ—Å—Ç—å –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–æ—á—Ç–∏ –≤—Å–µ–≥–¥–∞. –ù–∞–ø—Ä–∏–º–µ—Ä, —Å–æ–ª—å. –ú—ã –º–æ–∂–µ–º —É–∫–∞–∑–∞—Ç—å –µ–≥–æ "–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é". –ï—Å–ª–∏ –º—ã –Ω–µ –ø–µ—Ä–µ–¥–∞–¥–∏–º –Ω–æ–≤—É—é –ø–æ—Ä—Ü–∏—é —Å–æ–ª–∏, –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è.`,
{
    language: 'python',
    code: `# –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
# –£ –Ω–µ–µ –µ—Å—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç name
# –∏ –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π greeting, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é "–ü—Ä–∏–≤–µ—Ç"
def greet(name, greeting="–ü—Ä–∏–≤–µ—Ç"):
  print(f"{greeting}, {name}!")

# –í—ã–∑—ã–≤–∞–µ–º —Å –æ–¥–Ω–∏–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–º, –≤—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
greet("–í–∞—Å—è") # –í—ã–≤–µ–¥–µ—Ç: –ü—Ä–∏–≤–µ—Ç, –í–∞—Å—è!

# –ê —Ç—É—Ç –º—ã –ø–µ—Ä–µ–¥–∞–µ–º —Å–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è greeting
greet("–ú–∞—à–∞", "–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä") # –í—ã–≤–µ–¥–µ—Ç: –î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä, –ú–∞—à–∞!

# –ú–æ–∂–Ω–æ —É–∫–∞–∑—ã–≤–∞—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç—ã –ø–æ –∏–º–µ–Ω–∏, —Ç–æ–≥–¥–∞ –ø–æ—Ä—è–¥–æ–∫ –Ω–µ –≤–∞–∂–µ–Ω
greet(greeting="–•–∞–π", name="–û–ª–µ–≥") # –í—ã–≤–µ–¥–µ—Ç: –•–∞–π, –û–ª–µ–≥!`
},
`### ‚≠ê –ü–æ–ø—Ä–æ–±—É–π —Å–∞–º!
–ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é \`is_even(number)\`.
1.  –û–Ω–∞ –¥–æ–ª–∂–Ω–∞ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –æ–¥–Ω–æ —á–∏—Å–ª–æ (\`number\`).
2.  –í–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –ø—Ä–æ–≤–µ—Ä—è—Ç—å, –¥–µ–ª–∏—Ç—Å—è –ª–∏ —á–∏—Å–ª–æ –Ω–∞ 2 –±–µ–∑ –æ—Å—Ç–∞—Ç–∫–∞. (–ü–æ–¥—Å–∫–∞–∑–∫–∞: –æ–ø–µ—Ä–∞—Ç–æ—Ä \`%\` –Ω–∞—Ö–æ–¥–∏—Ç –æ—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è. \`10 % 3\` –±—É–¥–µ—Ç \`1\`).
3.  –ï—Å–ª–∏ —á–∏—Å–ª–æ —á–µ—Ç–Ω–æ–µ, —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å \`True\`. –ï—Å–ª–∏ –Ω–µ—á–µ—Ç–Ω–æ–µ ‚Äî \`False\`.
4.  –í—ã–∑–æ–≤–∏ —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ —Å —Ä–∞–∑–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏ –∏ –≤—ã–≤–µ–¥–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞ —ç–∫—Ä–∞–Ω.`
]
  },
  // =================================================================
  // –ù–û–í–´–ô –ö–£–†–°!
  // =================================================================
  {
    id: 'python-oop-intro',
    title: 'Python –¥–ª—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö: –ö–ª–∞—Å—Å—ã (–ß–µ—Ä—Ç–µ–∂–∏) üìê',
    description: '–î–µ–ª–∞–µ–º —à–∞–≥ –∫ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–º—É –∫–æ–¥—É! –ò–∑—É—á–∞–µ–º –∫–ª–∞—Å—Å—ã –∏ –æ–±—ä–µ–∫—Ç—ã ‚Äî —Å–ø–æ—Å–æ–± —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–≤–æ–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö, –Ω–∞–ø—Ä–∏–º–µ—Ä, "–ü–µ—Ä—Å–æ–Ω–∞–∂–∞" –¥–ª—è –∏–≥—Ä—ã.',
    category: 'Python –¥–ª—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö',
    tags: ['python', '–æ–æ–ø', '–∫–ª–∞—Å—Å—ã', '–æ–±—ä–µ–∫—Ç—ã', 'class', '__init__', '–º–µ—Ç–æ–¥—ã'],
    content: [
`### –ó–∞—á–µ–º –Ω—É–∂–Ω—ã –∫–ª–∞—Å—Å—ã?
–ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ –º—ã –¥–µ–ª–∞–µ–º –∏–≥—Ä—É. –£ –Ω–∞—Å –±—É–¥–µ—Ç –º–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π, –∏ —É –∫–∞–∂–¥–æ–≥–æ –±—É–¥–µ—Ç –∏–º—è, –∑–¥–æ—Ä–æ–≤—å–µ, –º–∞–Ω–∞... –ú—ã –º–æ–∂–µ–º —Ö—Ä–∞–Ω–∏—Ç—å –∏—Ö –≤ —Å–ª–æ–≤–∞—Ä—è—Ö, –Ω–æ —ç—Ç–æ –Ω–µ –æ—á–µ–Ω—å —É–¥–æ–±–Ω–æ. –ë—ã–ª–æ –±—ã –∫—Ä—É—Ç–æ —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–π –±—ã –Ω–∞–∑—ã–≤–∞–ª—Å—è \`Character\`.

**–ö–ª–∞—Å—Å** ‚Äî —ç—Ç–æ **—á–µ—Ä—Ç–µ–∂** –∏–ª–∏ **—Ñ–æ—Ä–º–æ—á–∫–∞ –¥–ª—è –ø–µ—á–µ–Ω—å—è**. –û–Ω –æ–ø–∏—Å—ã–≤–∞–µ—Ç, –∫–∞–∫–∏–º–∏ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ (–ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏) –∏ —É–º–µ–Ω–∏—è–º–∏ (—Ñ—É–Ω–∫—Ü–∏—è–º–∏) –±—É–¥–µ—Ç –æ–±–ª–∞–¥–∞—Ç—å –±—É–¥—É—â–∏–π –æ–±—ä–µ–∫—Ç.
**–û–±—ä–µ–∫—Ç** ‚Äî —ç—Ç–æ **–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä**, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –ø–æ —ç—Ç–æ–º—É —á–µ—Ä—Ç–µ–∂—É. –ù–∞–ø—Ä–∏–º–µ—Ä, –ø–æ —á–µ—Ä—Ç–µ–∂—É "–ú–∞—à–∏–Ω–∞" –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –æ–±—ä–µ–∫—Ç—ã "–ö—Ä–∞—Å–Ω—ã–π –§–µ—Ä—Ä–∞—Ä–∏" –∏ "–°–∏–Ω–∏–π –ñ–∏–≥—É–ª–∏".`,
{
  language: 'python',
  code: `# –°–æ–∑–¥–∞–µ–º —á–µ—Ä—Ç–µ–∂ (–ö–õ–ê–°–°) –¥–ª—è –Ω–∞—à–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π
class Character:
    # __init__ - —ç—Ç–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π "–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä". –û–Ω –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –º—ã —Å–æ–∑–¥–∞–µ–º –ù–û–í–´–ô –æ–±—ä–µ–∫—Ç.
    # –û–Ω —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –Ω–∞—á–∞–ª—å–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏.
    # self - —ç—Ç–æ —Å—Å—ã–ª–∫–∞ –Ω–∞ —Å–∞–º –æ–±—ä–µ–∫—Ç (–Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –≥–Ω–æ–º–∞ –∏–ª–∏ —ç–ª—å—Ñ–∞).
    def __init__(self, name, race, health=100):
        self.name = name
        self.race = race
        self.health = health
        print(f"–°–æ–∑–¥–∞–Ω –ø–µ—Ä—Å–æ–Ω–∞–∂: {self.name}, —Ä–∞—Å–∞: {self.race}")

    # –≠—Ç–æ –ú–ï–¢–û–î - —Ñ—É–Ω–∫—Ü–∏—è –≤–Ω—É—Ç—Ä–∏ –∫–ª–∞—Å—Å–∞. –û–Ω–∞ –æ–ø–∏—Å—ã–≤–∞–µ—Ç, —á—Ç–æ –æ–±—ä–µ–∫—Ç –£–ú–ï–ï–¢ –¥–µ–ª–∞—Ç—å.
    def take_damage(self, damage):
        self.health -= damage
        print(f"{self.name} –ø–æ–ª—É—á–∞–µ—Ç {damage} —É—Ä–æ–Ω–∞! –û—Å—Ç–∞–ª–æ—Å—å –∑–¥–æ—Ä–æ–≤—å—è: {self.health}")

    def show_info(self):
        print(f"--- –ò–ù–§–û ---")
        print(f"–ò–º—è: {self.name}")
        print(f"–†–∞—Å–∞: {self.race}")
        print(f"–ó–¥–æ—Ä–æ–≤—å–µ: {self.health}")
        print(f"--------------")


# –°–æ–∑–¥–∞–µ–º –û–ë–™–ï–ö–¢–´ (—ç–∫–∑–µ–º–ø–ª—è—Ä—ã) –ø–æ –Ω–∞—à–µ–º—É —á–µ—Ä—Ç–µ–∂—É
# –¢–µ–ø–µ—Ä—å —É –Ω–∞—Å –µ—Å—Ç—å –¥–≤–∞ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–∞!
gimli = Character("–ì–∏–º–ª–∏", "–ì–Ω–æ–º", 150) # –£ –≥–Ω–æ–º–æ–≤ –ø–æ–±–æ–ª—å—à–µ –∑–¥–æ—Ä–æ–≤—å—è
legolas = Character("–õ–µ–≥–æ–ª–∞—Å", "–≠–ª—å—Ñ") # –£ —ç–ª—å—Ñ–∞ –∑–¥–æ—Ä–æ–≤—å–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 100

# –î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∏—Ö
gimli.show_info()
legolas.show_info()

print("\\n--- –ù–ê–ß–ê–õ–ê–°–¨ –î–†–ê–ö–ê! ---")
# –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö "—É–º–µ–Ω–∏—è" (–º–µ—Ç–æ–¥—ã)
legolas.take_damage(20)
gimli.take_damage(10)

legolas.show_info()
`
},
`### –ù–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ: –£–ª—É—á—à–∞–µ–º —á–µ—Ä—Ç–µ–∂–∏
–ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ –º—ã —Ö–æ—Ç–∏–º —Å–æ–∑–¥–∞—Ç—å —á–µ—Ä—Ç–µ–∂ –¥–ª—è "–ú–∞–≥–∞", –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø–æ—Ö–æ–∂ –Ω–∞ "–ü–µ—Ä—Å–æ–Ω–∞–∂–∞", –Ω–æ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–æ–π ‚Äî –º–∞–Ω–æ–π. –ú—ã –º–æ–∂–µ–º –Ω–µ –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –≤–µ—Å—å –∫–æ–¥, –∞ **—É–Ω–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å** –µ–≥–æ!

**–ù–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ** –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∫–ª–∞—Å—Å (–ø–æ—Ç–æ–º–æ–∫) –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ (—Ä–æ–¥–∏—Ç–µ–ª—å), –¥–æ–±–∞–≤–∏–≤ –∏–ª–∏ –∏–∑–º–µ–Ω–∏–≤ –µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª.`,
{
    language: 'python',
    code: `# –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–ª–∞—Å—Å (—Ç–∞–∫–æ–π –∂–µ, –∫–∞–∫ –≤ –ø—Ä–æ—à–ª–æ–º –ø—Ä–∏–º–µ—Ä–µ)
class Character:
    def __init__(self, name, race, health=100):
        self.name = name
        self.race = race
        self.health = health

    def show_info(self):
        print(f"–ò–º—è: {self.name}, –†–∞—Å–∞: {self.race}, –ó–¥–æ—Ä–æ–≤—å–µ: {self.health}")

# –ö–ª–∞—Å—Å-–ø–æ—Ç–æ–º–æ–∫. –í —Å–∫–æ–±–∫–∞—Ö —É–∫–∞–∑—ã–≤–∞–µ–º, –æ—Ç –∫–æ–≥–æ –æ–Ω –Ω–∞—Å–ª–µ–¥—É–µ—Ç—Å—è.
class Mage(Character):
    # –ú—ã —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä, —Ç.–∫. —Ö–æ—Ç–∏–º –¥–æ–±–∞–≤–∏—Ç—å –º–∞–Ω—É
    def __init__(self, name, race, health=80, mana=150):
        # super().__init__() - –≤—ã–∑—ã–≤–∞–µ—Ç –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–ª–∞—Å—Å–∞.
        # –≠—Ç–æ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã –Ω–µ –ø–∏—Å–∞—Ç—å –∑–∞–Ω–æ–≤–æ self.name = name –∏ —Ç.–¥.
        super().__init__(name, race, health)
        self.mana = mana # –ê —ç—Ç–æ –Ω–∞—à–∞ –Ω–æ–≤–∞—è, —É–Ω–∏–∫–∞–ª—å–Ω–∞—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞

    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ—Ç —É –æ–±—ã—á–Ω–æ–≥–æ Character
    def cast_spell(self):
        if self.mana >= 20:
            self.mana -= 20
            print(f"{self.name} –∫–∞—Å—Ç—É–µ—Ç —Ñ–∞–µ—Ä–±–æ–ª! –û—Å—Ç–∞–ª–æ—Å—å –º–∞–Ω—ã: {self.mana}")
        else:
            print(f"–£ {self.name} –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –º–∞–Ω—ã!")
    
    # –ú—ã –º–æ–∂–µ–º –ü–ï–†–ï–û–ü–†–ï–î–ï–õ–ò–¢–¨ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –º–µ—Ç–æ–¥, —á—Ç–æ–±—ã –æ–Ω —Ä–∞–±–æ—Ç–∞–ª –ø–æ-–¥—Ä—É–≥–æ–º—É
    def show_info(self):
        # –°–Ω–∞—á–∞–ª–∞ –≤—ã–∑–æ–≤–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –∏–º—è, —Ä–∞—Å—É, –∑–¥–æ—Ä–æ–≤—å–µ
        super().show_info()
        # –ê –ø–æ—Ç–æ–º –¥–æ–±–∞–≤–∏–º –≤—ã–≤–æ–¥ –Ω–∞—à–µ–π –Ω–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        print(f"–ú–∞–Ω–∞: {self.mana}")


# –°–æ–∑–¥–∞–µ–º –æ–±—ã—á–Ω–æ–≥–æ –≤–æ–∏–Ω–∞
boromir = Character("–ë–æ—Ä–æ–º–∏—Ä", "–ß–µ–ª–æ–≤–µ–∫", 120)

# –ê —ç—Ç–æ —É–∂–µ –º–∞–≥, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –ø–æ –Ω–æ–≤–æ–º—É —á–µ—Ä—Ç–µ–∂—É
gandalf = Mage("–ì—ç–Ω–¥–∞–ª—å—Ñ", "–ß–µ–ª–æ–≤–µ–∫")

boromir.show_info()
print("---")
gandalf.show_info()
print("---")

gandalf.cast_spell()
gandalf.cast_spell()`
}
]
  },
  // =================================================================
  // –ù–û–í–´–ô –ú–ò–ù–ò-–ü–†–û–ï–ö–¢!
  // =================================================================
  {
    id: 'python-project-guess-number',
    title: '–ú–∏–Ω–∏-–ø—Ä–æ–µ–∫—Ç: –ò–≥—Ä–∞ "–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ" üé≤',
    description: '–ü–∏—à–µ–º –ø–µ—Ä–≤—É—é –Ω–∞—Å—Ç–æ—è—â—É—é –∏–≥—Ä—É! –ö–æ–º–ø—å—é—Ç–µ—Ä –∑–∞–≥–∞–¥—ã–≤–∞–µ—Ç —á–∏—Å–ª–æ, –∞ –º—ã –ø—ã—Ç–∞–µ–º—Å—è –µ–≥–æ —É–≥–∞–¥–∞—Ç—å. –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, —Ü–∏–∫–ª—ã –∏ —É—Å–ª–æ–≤–∏—è.',
    category: 'Python –ü—Ä–æ–µ–∫—Ç—ã',
    tags: ['python', '–ø—Ä–æ–µ–∫—Ç', '–∏–≥—Ä–∞', 'random', 'while', 'if-else'],
    content: [
`### –ü–ª–∞–Ω –∏–≥—Ä—ã
–î–∞–≤–∞–π —Å–æ–±–µ—Ä–µ–º –≤—Å–µ, —á—Ç–æ –º—ã –≤—ã—É—á–∏–ª–∏, –≤ –æ–¥–∏–Ω –ø—Ä–æ–µ–∫—Ç! –ù–∞—à–∞ –∏–≥—Ä–∞ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–∞–∫:
1.  –ö–æ–º–ø—å—é—Ç–µ—Ä –∑–∞–≥–∞–¥—ã–≤–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100.
2.  –û–Ω –≥–æ–≤–æ—Ä–∏—Ç –Ω–∞–º: "–Ø –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ, –ø–æ–ø—Ä–æ–±—É–π —É–≥–∞–¥–∞—Ç—å!".
3.  –ú—ã –≤–≤–æ–¥–∏–º —Å–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –≤ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–º —Ü–∏–∫–ª–µ \`while True\`.
4.  –ö–æ–º–ø—å—é—Ç–µ—Ä —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –Ω–∞—à–µ —á–∏—Å–ª–æ —Å–æ —Å–≤–æ–∏–º –∏ –¥–∞–µ—Ç –ø–æ–¥—Å–∫–∞–∑–∫—É: "–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ", "–°–ª–∏—à–∫–æ–º –º–∞–ª–æ" –∏–ª–∏ "–¢—ã —É–≥–∞–¥–∞–ª!".
5.  –ï—Å–ª–∏ –º—ã —É–≥–∞–¥–∞–ª–∏, –∏–≥—Ä–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è.

### –®–∞–≥ 1: –ö–∞–∫ –∑–∞—Å—Ç–∞–≤–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä –∑–∞–≥–∞–¥–∞—Ç—å —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ?
–í Python –µ—Å—Ç—å –≤—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è "–±–∏–±–ª–∏–æ—Ç–µ–∫–∞" (–Ω–∞–±–æ—Ä –≥–æ—Ç–æ–≤—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤) –ø–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º \`random\`. –í –Ω–µ–π –µ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è \`randint(a, b)\`, –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –º–µ–∂–¥—É \`a\` –∏ \`b\`.`,
{
    language: 'python',
    code: `# –ß—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏, –µ–µ –Ω—É–∂–Ω–æ "–∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å"
import random

# –ó–∞–≥–∞–¥—ã–≤–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100 –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ
secret_number = random.randint(1, 100)

print("–Ø –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100. –ü–æ–ø—Ä–æ–±—É–π —É–≥–∞–¥–∞—Ç—å!")
# –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–æ–∫—É, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å —Å–∂—É–ª—å–Ω–∏—á–∞—Ç—å –∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–≤–µ—Ç :)
# print(f"(–ü–æ–¥—Å–∫–∞–∑–∫–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞: —ç—Ç–æ —á–∏—Å–ª–æ {secret_number})")

while True:
    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º —á–∏—Å–ª–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å—Ä–∞–∑—É –ø—Ä–µ–≤—Ä–∞—â–∞–µ–º –µ–≥–æ –≤ int
    guess = int(input("–¢–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç: "))

    # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —á–∏—Å–ª–∞
    if guess < secret_number:
        print("–°–ª–∏—à–∫–æ–º –º–∞–ª–æ! –ü–æ–ø—Ä–æ–±—É–π —á–∏—Å–ª–æ –ø–æ–±–æ–ª—å—à–µ.")
    elif guess > secret_number:
        print("–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ! –ü–æ–ø—Ä–æ–±—É–π —á–∏—Å–ª–æ –ø–æ–º–µ–Ω—å—à–µ.")
    else:
        print(f"üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢—ã —É–≥–∞–¥–∞–ª! –≠—Ç–æ –±—ã–ª–æ —á–∏—Å–ª–æ {secret_number}.")
        break # –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞, —Ç.–∫. –∏–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞

print("–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É!")`
},
`### ‚≠ê –ü–æ–ø—Ä–æ–±—É–π —É–ª—É—á—à–∏—Ç—å –∏–≥—Ä—É!
–í–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–¥–µ–π, –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å –∏–≥—Ä—É –µ—â–µ –∫—Ä—É—á–µ:
1.  **–°—á–µ—Ç—á–∏–∫ –ø–æ–ø—ã—Ç–æ–∫:** –°–æ–∑–¥–∞–π –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é-—Å—á–µ—Ç—á–∏–∫. –ü—Ä–∏–±–∞–≤–ª—è–π –∫ –Ω–µ–π 1 –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –ø–æ–ø—ã—Ç–∫–∏. –ö–æ–≥–¥–∞ –∏–≥—Ä–æ–∫ —É–≥–∞–¥–∞–µ—Ç, –≤—ã–≤–µ–¥–∏ "–¢—ã —É–≥–∞–¥–∞–ª –∑–∞ [N] –ø–æ–ø—ã—Ç–æ–∫!".
2.  **–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ–ø—ã—Ç–æ–∫:** –î–∞–π –∏–≥—Ä–æ–∫—É –≤—Å–µ–≥–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä, 7 –ø–æ–ø—ã—Ç–æ–∫. –ï—Å–ª–∏ –æ–Ω –Ω–µ —É–≥–∞–¥–∞–ª, –∏–≥—Ä–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –ø–æ—Ä–∞–∂–µ–Ω–∏–µ–º. (–ü–æ–¥—Å–∫–∞–∑–∫–∞: –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å \`if\` –≤–Ω—É—Ç—Ä–∏ —Ü–∏–∫–ª–∞ \`while\`, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—á–µ—Ç—á–∏–∫ –∏ —Å–¥–µ–ª–∞—Ç—å \`break\`).
3.  **–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∂—É–ª—å–Ω–∏—á–µ—Å—Ç–≤–æ:** –ß—Ç–æ –±—É–¥–µ—Ç, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–¥–µ—Ç —á–∏—Å–ª–æ –±–æ–ª—å—à–µ 100 –∏–ª–∏ –º–µ–Ω—å—à–µ 1? –î–æ–±–∞–≤—å –ø—Ä–æ–≤–µ—Ä–∫—É, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç —Ä—É–≥–∞—Ç—å –µ–≥–æ –∑–∞ —ç—Ç–æ.`
]
  },
  // =================================================================
  // GigaChat & LangChain - –û–ë–ù–û–í–õ–ï–ù–û –ò –£–õ–£–ß–®–ï–ù–û
  // =================================================================
  {
    id: 'gigachat-simple',
    title: 'GigaChat: –ù–∞—à –ø–µ—Ä–≤—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä —Å –ò–ò ü§ñ',
    description: '–£—á–∏–º—Å—è –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞–ø—Ä–æ—Å—ã –≤ GigaChat –∏ –≤–µ—Å—Ç–∏ —Å –Ω–∏–º –ø—Ä–æ—Å—Ç–æ–π –¥–∏–∞–ª–æ–≥, –∫–æ—Ç–æ—Ä—ã–π –æ–Ω –±—É–¥–µ—Ç –ø–æ–º–Ω–∏—Ç—å. –ó–Ω–∞–∫–æ–º–∏–º—Å—è —Å API-–∫–ª—é—á–∞–º–∏.',
    category: 'LangChain & GigaChat',
    tags: ['gigachat', 'langchain', '—á–∞—Ç', '—Å–æ–æ–±—â–µ–Ω–∏—è', 'api'],
    content: [
`### –ö—Ç–æ —Ç–∞–∫–æ–π GigaChat –∏ —á—Ç–æ —Ç–∞–∫–æ–µ API-–∫–ª—é—á?
–ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ GigaChat ‚Äî —ç—Ç–æ –æ—á–µ–Ω—å —É–º–Ω—ã–π –¥–∂–∏–Ω–Ω, –∫–æ—Ç–æ—Ä—ã–π –∂–∏–≤–µ—Ç –≤ –ª–∞–º–ø–µ. –ß—Ç–æ–±—ã –µ–≥–æ –≤—ã–∑–≤–∞—Ç—å, —Ç–µ–±–µ –Ω—É–∂–µ–Ω —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π **—Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á (API-–∫–ª—é—á)**. –≠—Ç–æ—Ç –∫–ª—é—á –¥–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç–µ–±–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ —Å –Ω–∏–º —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å. –ö–ª—é—á ‚Äî —ç—Ç–æ –∫–∞–∫ –ø–∞—Ä–æ–ª—å, –µ–≥–æ –Ω–∏–∫–æ–º—É –Ω–µ–ª—å–∑—è –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å!

**–ê–Ω–∞–ª–æ–≥–∏—è:** GigaChat ‚Äî —ç—Ç–æ –ø–ª–∞—Ç–Ω—ã–π –∞—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω –≤ –ø–∞—Ä–∫–µ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π. API-–∫–ª—é—á ‚Äî —ç—Ç–æ —Ç–≤–æ–π –±–∏–ª–µ—Ç –Ω–∞ —ç—Ç–æ—Ç –∞—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω.

–°–Ω–∞—á–∞–ª–∞ –¥–∞–≤–∞–π—Ç–µ –ø—Ä–æ—Å—Ç–æ –∑–∞–¥–∞–¥–∏–º –µ–º—É –æ–¥–∏–Ω –≤–æ–ø—Ä–æ—Å.`,
{
  language: 'python',
  code: `# –°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫—É: pip install langchain-gigachat
from langchain_gigachat import GigaChat

# "–ü—Ä–∏–∑—ã–≤–∞–µ–º" –Ω–∞—à–µ–≥–æ –¥–∂–∏–Ω–Ω–∞. 
# –í credentials –Ω—É–∂–Ω–æ –≤—Å—Ç–∞–≤–∏—Ç—å —Ç–≤–æ–π —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á.
# verify_ssl_certs=False - —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –¥–µ—Ç–∞–ª—å, —á—Ç–æ–±—ã –Ω–µ —Ä—É–≥–∞–ª—Å—è –Ω–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã.
gigachat = GigaChat(credentials="–í–ê–®_–°–ï–ö–†–ï–¢–ù–´–ô_–ö–õ–Æ–ß_–°–Æ–î–ê", verify_ssl_certs=False)

print("–ó–∞–¥–∞—é –≤–æ–ø—Ä–æ—Å –¥–∂–∏–Ω–Ω—É...")
# –°–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∂–∏–Ω–Ω–∞ (–≤—ã–∑—ã–≤–∞–µ–º –µ–≥–æ) –∏ –ø–µ—Ä–µ–¥–∞–µ–º –Ω–∞—à –≤–æ–ø—Ä–æ—Å
response = gigachat.invoke("–ö–∞–∫–æ–π —Å–∞–º—ã–π –±–æ–ª—å—à–æ–π –æ–∫–µ–∞–Ω –Ω–∞ –ó–µ–º–ª–µ?")

# –í –æ—Ç–≤–µ—Ç–µ –º–Ω–æ–≥–æ –≤—Å–µ–≥–æ, –Ω–æ —Å–∞–º —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ –ª–µ–∂–∏—Ç –≤ –ø–æ–ª–µ .content
print("–û—Ç–≤–µ—Ç –¥–∂–∏–Ω–Ω–∞:")
print(response.content)`
},
`### –ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å, —á—Ç–æ–±—ã –¥–∂–∏–Ω–Ω –Ω–µ –∑–∞–±—ã–≤–∞–ª?
–ü—Ä–æ–±–ª–µ–º–∞ –≤ —Ç–æ–º, —á—Ç–æ –¥–∂–∏–Ω–Ω –æ—á–µ–Ω—å –∑–∞–±—ã–≤—á–∏–≤—ã–π. –û–Ω –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å –∏ —Ç—É—Ç –∂–µ –∑–∞–±—ã–≤–∞–µ—Ç, –æ —á–µ–º –≤—ã –≥–æ–≤–æ—Ä–∏–ª–∏. –ß—Ç–æ–±—ã –æ–Ω –ø–æ–º–Ω–∏–ª —Ä–∞–∑–≥–æ–≤–æ—Ä, –º—ã –¥–æ–ª–∂–Ω—ã –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º –Ω–æ–≤—ã–º –≤–æ–ø—Ä–æ—Å–æ–º –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –µ–º—É –≤—Å—é –ø—Ä–µ–¥—ã–¥—É—â—É—é –ø–µ—Ä–µ–ø–∏—Å–∫—É.

–ú—ã –±—É–¥–µ–º —Ö—Ä–∞–Ω–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞ –≤ –æ–±—ã—á–Ω–æ–º —Å–ø–∏—Å–∫–µ. –î–ª—è —ç—Ç–æ–≥–æ –µ—Å—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ç–∏–ø—ã —Å–æ–æ–±—â–µ–Ω–∏–π:
- \`SystemMessage\`: –†–æ–ª—å, –∫–æ—Ç–æ—Ä—É—é –º—ã –¥–∞–µ–º –ò–ò ("–¢—ã - –ø–∏—Ä–∞—Ç").
- \`HumanMessage\`: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –Ω–∞—Å, –ª—é–¥–µ–π.
- \`AIMessage\`: –û—Ç–≤–µ—Ç –æ—Ç –ò–ò (–¥–∂–∏–Ω–Ω–∞).`,
{
  language: 'python',
  code: `from langchain_gigachat import GigaChat
from langchain_core.messages import HumanMessage, SystemMessage, AIMessage

gigachat = GigaChat(credentials="–í–ê–®_–°–ï–ö–†–ï–¢–ù–´–ô_–ö–õ–Æ–ß_–°–Æ–î–ê", verify_ssl_certs=False)

# –≠—Ç–æ –Ω–∞—à–∞ "–ø–∞–ø–∏—Ä—É—Å–Ω–∞—è –ª–µ–Ω—Ç–∞", –≥–¥–µ –º—ã –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤–µ—Å—å –¥–∏–∞–ª–æ–≥
message_history = []

# –ú—ã –º–æ–∂–µ–º –¥–∞—Ç—å –¥–∂–∏–Ω–Ω—É —Ä–æ–ª—å. –û–Ω –±—É–¥–µ—Ç –µ–µ –ø—Ä–∏–¥–µ—Ä–∂–∏–≤–∞—Ç—å—Å—è.
# –≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –º—ã –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞ –ª–µ–Ω—Ç—É –ø–µ—Ä–≤—ã–º.
system_prompt = SystemMessage(content="–¢—ã - –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –ø–∏—Ä–∞—Ç, –∫–æ—Ç–æ—Ä—ã–π –∏—â–µ—Ç —Å–æ–∫—Ä–æ–≤–∏—â–∞. –ì–æ–≤–æ—Ä–∏ –∫–∞–∫ –ø–∏—Ä–∞—Ç.")
message_history.append(system_prompt)

print("–ù–∞—á–∞—Ç –¥–∏–∞–ª–æ–≥ —Å –ø–∏—Ä–∞—Ç–æ–º! –í–≤–µ–¥–∏ '—Å—Ç–æ–ø', —á—Ç–æ–±—ã —É–π—Ç–∏.")

while True:
    user_input = input("–í—ã: ")
    if user_input.lower() == "—Å—Ç–æ–ø":
        print("–ô–æ-—Ö–æ-—Ö–æ! –î–æ —Å–∫–æ—Ä–æ–π –≤—Å—Ç—Ä–µ—á–∏!")
        break

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–∞—à –≤–æ–ø—Ä–æ—Å –Ω–∞ –ª–µ–Ω—Ç—É
    message_history.append(HumanMessage(content=user_input))
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∂–∏–Ω–Ω—É –í–°–Æ –ª–µ–Ω—Ç—É –∏ –ø–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç
    ai_response = gigachat.invoke(message_history)
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç –¥–∂–∏–Ω–Ω–∞ –Ω–∞ –ª–µ–Ω—Ç—É, —á—Ç–æ–±—ã –æ–Ω –µ–≥–æ –Ω–µ –∑–∞–±—ã–ª –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
    message_history.append(ai_response)
    
    # –ü–µ—á–∞—Ç–∞–µ–º –æ—Ç–≤–µ—Ç
    print(f"–ü–∏—Ä–∞—Ç: {ai_response.content}")`
}
]
  },
  {
    id: 'gigachat-structured',
    title: 'GigaChat: –ó–∞—Å—Ç–∞–≤–ª—è–µ–º –ò–ò –æ—Ç–≤–µ—á–∞—Ç—å –ø–æ –∞–Ω–∫–µ—Ç–µ üìù',
    description: '–£—á–∏–º GigaChat –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç–æ–º, –∞ –≤ —Å—Ç—Ä–æ–≥–æ–º —Ñ–æ—Ä–º–∞—Ç–µ, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–π–º–µ—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä, —Å –ø–æ–º–æ—â—å—é Pydantic.',
    category: 'LangChain & GigaChat',
    tags: ['gigachat', 'langchain', 'json', 'pydantic', '—Å—Ç—Ä—É–∫—Ç—É—Ä–∞'],
    content: [
`–û–±—ã—á–Ω–æ –¥–∂–∏–Ω–Ω-GigaChat –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞–º –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç–æ–º. –ù–æ —á—Ç–æ –µ—Å–ª–∏ –Ω–∞–º –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã –æ–Ω –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ä–∞—Å—Å–∫–∞–∑–∞–ª –æ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ, –∞ **–∑–∞–ø–æ–ª–Ω–∏–ª –∞–Ω–∫–µ—Ç—É**? –ù–∞–ø—Ä–∏–º–µ—Ä, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –ª–µ–≥–∫–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –µ–≥–æ –æ—Ç–≤–µ—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ.

### –ó–∞—á–µ–º —ç—Ç–æ –Ω—É–∂–Ω–æ?
–ï—Å–ª–∏ —Å–ø—Ä–æ—Å–∏—Ç—å: "–ü—Ä–∏–¥—É–º–∞–π –ø–µ—Ä—Å–æ–Ω–∞–∂–∞-–≥–Ω–æ–º–∞ –ø–æ –∏–º–µ–Ω–∏ –¢–æ—Ä–∏–Ω, –µ–º—É 150 –ª–µ—Ç, –æ–Ω –ª—é–±–∏—Ç –ø–∏–≤–æ", –¥–∂–∏–Ω–Ω –º–æ–∂–µ—Ç –æ—Ç–≤–µ—Ç–∏—Ç—å –∫–∞–∫ —É–≥–æ–¥–Ω–æ:
- "–í–æ—Ç –≥–Ω–æ–º: –¢–æ—Ä–∏–Ω, 150 –ª–µ—Ç. –õ—é–±–∏–º—ã–π –Ω–∞–ø–∏—Ç–æ–∫ - –ø–∏–≤–æ."
- "–Ø –ø—Ä–∏–¥—É–º–∞–ª –≥–Ω–æ–º–∞! –ï–≥–æ –∑–æ–≤—É—Ç –¢–æ—Ä–∏–Ω, –≤–æ–∑—Ä–∞—Å—Ç - 150 –ª–µ—Ç, –∏ –æ–Ω –æ–±–æ–∂–∞–µ—Ç –ø–∏–≤–æ."
–¢–∞–∫–æ–π —Ç–µ–∫—Å—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä—É —Å–ª–æ–∂–Ω–æ "—Ä–∞–∑–æ–±—Ä–∞—Ç—å". –ù–æ –µ—Å–ª–∏ –º—ã –∑–∞—Å—Ç–∞–≤–∏–º –¥–∂–∏–Ω–Ω–∞ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É, –º—ã –ø–æ–ª—É—á–∏–º —á–µ—Ç–∫–∏–π, –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–π –æ—Ç–≤–µ—Ç: \`–∏–º—è="–¢–æ—Ä–∏–Ω", –≤–æ–∑—Ä–∞—Å—Ç=150, —Ö–æ–±–±–∏="–ø–∏—Ç—å –ø–∏–≤–æ"\`.

### –ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å "–∞–Ω–∫–µ—Ç—É" —Å –ø–æ–º–æ—â—å—é Pydantic?
–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–∫–µ—Ç –º—ã –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ–º–æ—â–Ω–∏–∫–∞ ‚Äî –±–∏–±–ª–∏–æ—Ç–µ–∫—É \`Pydantic\`. –ú—ã —Å–æ–∑–¥–∞–¥–∏–º **–∫–ª–∞—Å—Å** (—á–µ—Ä—Ç–µ–∂ –Ω–∞—à–µ–π –∞–Ω–∫–µ—Ç—ã) –∏ –ø–µ—Ä–µ—á–∏—Å–ª–∏–º –≤ –Ω–µ–º –≤—Å–µ –ø–æ–ª—è, –∫–æ—Ç–æ—Ä—ã–µ –¥–∂–∏–Ω–Ω –¥–æ–ª–∂–µ–Ω –∑–∞–ø–æ–ª–Ω–∏—Ç—å. –û–ø–∏—Å–∞–Ω–∏–µ –ø–æ–ª—è (\`description\`) ‚Äî —ç—Ç–æ –ø–æ–¥—Å–∫–∞–∑–∫–∞ –¥–ª—è –ò–ò, —á—Ç–æ–±—ã –æ–Ω –ø–æ–Ω—è–ª, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –æ—Ç –Ω–µ–≥–æ —Ö–æ—Ç—è—Ç.`,
{
  language: 'python',
  code: `# pip install pydantic
from langchain_gigachat import GigaChat
from langchain_core.pydantic_v1 import BaseModel, Field

# --- 1. –°–æ–∑–¥–∞–µ–º —á–µ—Ä—Ç–µ–∂ –Ω–∞—à–µ–π –∞–Ω–∫–µ—Ç—ã (–∫–ª–∞—Å—Å Pydantic) ---
# –ú—ã —Å–æ–∑–¥–∞–µ–º –∫–ª–∞—Å—Å "Character", –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –Ω–∞—à–µ–π –∞–Ω–∫–µ—Ç–æ–π.
# BaseModel - —ç—Ç–æ –≤–æ–ª—à–µ–±–Ω–æ–µ —Å–ª–æ–≤–æ –æ—Ç Pydantic, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞—Å—Å –≤ –∞–Ω–∫–µ—Ç—É.
class Character(BaseModel):
    # –û–ø–∏—Å—ã–≤–∞–µ–º –ø–æ–ª—è –∞–Ω–∫–µ—Ç—ã: –∏–º—è –ø–æ–ª—è, —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –∏ –æ–ø–∏—Å–∞–Ω–∏–µ-–ø–æ–¥—Å–∫–∞–∑–∫—É –¥–ª—è –¥–∂–∏–Ω–Ω–∞.
    name: str = Field(description="–ò–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞")
    age: int = Field(description="–í–æ–∑—Ä–∞—Å—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞")
    race: str = Field(description="–†–∞—Å–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä, –ß–µ–ª–æ–≤–µ–∫, –≠–ª—å—Ñ –∏–ª–∏ –ì–Ω–æ–º")
    inventory: list[str] = Field(description="–°–ø–∏—Å–æ–∫ –∏–∑ 3 –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞")

# --- 2. "–ü—Ä–∏–∑—ã–≤–∞–µ–º" –¥–∂–∏–Ω–Ω–∞ ---
gigachat = GigaChat(credentials="–í–ê–®_–°–ï–ö–†–ï–¢–ù–´–ô_–ö–õ–Æ–ß_–°–Æ–î–ê", verify_ssl_certs=False)

# --- 3. –°–≤—è–∑—ã–≤–∞–µ–º –¥–∂–∏–Ω–Ω–∞ —Å –Ω–∞—à–µ–π –∞–Ω–∫–µ—Ç–æ–π ---
# .with_structured_output(Character) - —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞ "–î–∂–∏–Ω–Ω, –æ—Ç–Ω—ã–Ω–µ –æ—Ç–≤–µ—á–∞–π, –∑–∞–ø–æ–ª–Ω—è—è –∞–Ω–∫–µ—Ç—É Character!"
structured_gigachat = gigachat.with_structured_output(Character)

# --- 4. –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å ---
prompt = "–ü—Ä–∏–¥—É–º–∞–π –º–Ω–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞. –≠—Ç–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —ç–ª—å—Ñ-–ª—É—á–Ω–∏–∫ –ø–æ –∏–º–µ–Ω–∏ –õ–µ–≥–æ–ª–∞—Å, –∫–æ—Ç–æ—Ä–æ–º—É 500 –ª–µ—Ç. –í –µ–≥–æ —Ä—é–∫–∑–∞–∫–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ª—É–∫, —Å—Ç—Ä–µ–ª—ã –∏ –ª–µ–º–±–∞—Å (—ç–ª—å—Ñ–∏–π—Å–∫–∏–π —Ö–ª–µ–±)."
print("–ü—Ä–æ—à—É –¥–∂–∏–Ω–Ω–∞ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É...")
response = structured_gigachat.invoke(prompt)

# --- 5. –ü–æ–ª—É—á–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—É—é –∞–Ω–∫–µ—Ç—É ---
print("\\n–ê–Ω–∫–µ—Ç–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞! –í–æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç:")
# response - —ç—Ç–æ —Ç–µ–ø–µ—Ä—å –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç, –∞ –æ–±—ä–µ–∫—Ç –Ω–∞—à–µ–≥–æ –∫–ª–∞—Å—Å–∞ Character!
print(response) 
# –í—ã–≤–æ–¥ –±—É–¥–µ—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ —Ç–∞–∫–∏–º:
# name='–õ–µ–≥–æ–ª–∞—Å' age=500 race='–≠–ª—å—Ñ' inventory=['–õ—É–∫', '–°—Ç—Ä–µ–ª—ã', '–õ–µ–º–±–∞—Å']

# –ú—ã –º–æ–∂–µ–º –ª–µ–≥–∫–æ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∫–∞–∂–¥–æ–º—É –ø–æ–ª—é
print("\\n--- –î–∞–Ω–Ω—ã–µ –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏ ---")
print(f"–ò–º—è: {response.name}")
print(f"–í–æ–∑—Ä–∞—Å—Ç: {response.age}")
print(f"–†–∞—Å–∞: {response.race}")
print(f"–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å: {response.inventory}")`
}
]
  },
  {
    id: 'langgraph-tools-memory',
    title: 'LangGraph: –î–∞–µ–º –ò–ò –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ –ø–∞–º—è—Ç—å üõ†Ô∏èüß†',
    description: '–°–æ–∑–¥–∞–µ–º –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–≥–æ –∞–≥–µ–Ω—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞—à–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ Python-—Ñ—É–Ω–∫—Ü–∏–∏ (–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã) –∏ –ø–æ–º–Ω–∏—Ç—å –≤–µ—Å—å –¥–∏–∞–ª–æ–≥.',
    category: 'LangChain & GigaChat',
    tags: ['langgraph', 'gigachat', '–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã', '–ø–∞–º—è—Ç—å', '–∞–≥–µ–Ω—Ç'],
    content: [
`–û–±—ã—á–Ω—ã–π –¥–∂–∏–Ω–Ω-GigaChat –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –±–æ–ª—Ç–∞—Ç—å. –ù–æ –º—ã –º–æ–∂–µ–º –Ω–∞—É—á–∏—Ç—å –µ–≥–æ **—Ñ–æ–∫—É—Å–∞–º**! –≠—Ç–∏ —Ñ–æ–∫—É—Å—ã –Ω–∞–∑—ã–≤–∞—é—Ç—Å—è **"–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã" (tools)**. –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç ‚Äî —ç—Ç–æ –æ–±—ã—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞ Python, –∫–æ—Ç–æ—Ä—É—é –¥–∂–∏–Ω–Ω –º–æ–∂–µ—Ç —Å–∞–º —Ä–µ—à–∏—Ç—å –≤—ã–∑–≤–∞—Ç—å, —á—Ç–æ–±—ã —á—Ç–æ-—Ç–æ —Å–¥–µ–ª–∞—Ç—å: –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–≥–æ–¥—É, –ø–æ–∏—Å–∫–∞—Ç—å —Ç–æ–≤–∞—Ä –≤ –Ω–∞—à–µ–º "–º–∞–≥–∞–∑–∏–Ω–µ", –ø–æ—Å—á–∏—Ç–∞—Ç—å —á—Ç–æ-—Ç–æ –Ω–∞ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–µ.

### –ö–∞–∫ –Ω–∞—É—á–∏—Ç—å –¥–∂–∏–Ω–Ω–∞ "—Ñ–æ–∫—É—Å—É"?
1.  **–ü–∏—à–µ–º —Ñ—É–Ω–∫—Ü–∏—é-—Ñ–æ–∫—É—Å**: –°–æ–∑–¥–∞–µ–º –æ–±—ã—á–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –Ω–∞ Python.
2.  **–í–µ—à–∞–µ–º "—Ç–∞–±–ª–∏—á–∫—É" \`@tool\`**: –ü—Ä—è–º–æ –Ω–∞–¥ –Ω–∞—à–µ–π —Ñ—É–Ω–∫—Ü–∏–µ–π –º—ã –ø–∏—à–µ–º –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä \`@tool\`. –≠—Ç–æ –∫–∞–∫ –±—ã "–∑–∞—Ä—è–∂–∞–µ—Ç" –Ω–∞—à—É —Ñ—É–Ω–∫—Ü–∏—é –º–∞–≥–∏–µ–π, –ø—Ä–µ–≤—Ä–∞—â–∞—è –µ–µ –≤ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç, –ø–æ–Ω—è—Ç–Ω—ã–π –¥–∂–∏–Ω–Ω—É.
3.  **–ü–∏—à–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é**: –í —Ç—Ä–æ–π–Ω—ã—Ö –∫–∞–≤—ã—á–∫–∞—Ö \`"""–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"""\` –º—ã –ø—Ä–æ—Å—Ç—ã–º —è–∑—ã–∫–æ–º –æ–±—ä—è—Å–Ω—è–µ–º, **—á—Ç–æ –¥–µ–ª–∞–µ—Ç –Ω–∞—à —Ñ–æ–∫—É—Å –∏ –∫–æ–≥–¥–∞ –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å**. –î–∂–∏–Ω–Ω –±—É–¥–µ—Ç —á–∏—Ç–∞—Ç—å —ç—Ç—É –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é, —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å, –∫–∞–∫–æ–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –µ–º—É –Ω—É–∂–µ–Ω –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –Ω–∞—à –≤–æ–ø—Ä–æ—Å.

### –ü—Ä–æ–µ–∫—Ç: –î–∂–∏–Ω–Ω-–ø—Ä–æ–¥–∞–≤–µ—Ü —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤
–°–æ–∑–¥–∞–¥–∏–º –¥–∂–∏–Ω–Ω–∞, –∫–æ—Ç–æ—Ä—ã–π "—Ä–∞–±–æ—Ç–∞–µ—Ç" –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤. –£ –Ω–µ–≥–æ –±—É–¥–µ—Ç –¥–≤–∞ —Ñ–æ–∫—É—Å–∞: —É–∑–Ω–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è –≤—Å–µ—Ö —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –∏ –Ω–∞–π—Ç–∏ —Ç–µ–ª–µ—Ñ–æ–Ω –ø–æ –∏–º–µ–Ω–∏.`,
{
  language: 'python',
  code: `# pip install langgraph
from langchain_gigachat import GigaChat
from langchain.tools import tool
from typing import Dict, List
from langgraph.prebuilt import create_react_agent
from langgraph.checkpoint.memory import MemorySaver

# --- –ù–∞—à–∞ "–±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö" —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ (–ø—Ä–æ—Å—Ç–æ —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π) ---
database = [
    {"name": "Pixel 8a", "price": 500, "memory": "128gb", "description": "–û—Ç–ª–∏—á–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω —Å –ª—É—á—à–µ–π –∫–∞–º–µ—Ä–æ–π."},
    {"name": "Galaxy S24", "price": 1000, "memory": "256gb", "description": "–§–ª–∞–≥–º–∞–Ω –æ—Ç Samsung —Å–æ —Å—Ç–∏–ª—É—Å–æ–º."},
    {"name": "Redmi Note 13", "price": 250, "memory": "128gb", "description": "–õ—É—á—à–∏–π –±—é–¥–∂–µ—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω."}
]

# --- 1. –°–æ–∑–¥–∞–µ–º —Ñ–æ–∫—É—Å—ã (–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã) ---

@tool
def get_all_phone_names() -> List[str]:
  """–ò—Å–ø–æ–ª—å–∑—É–π —ç—Ç–æ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ù–ê–ó–í–ê–ù–ò–Ø –í–°–ï–• —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω–µ."""
  print("--- [–î–∂–∏–Ω–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç 'get_all_phone_names'] ---")
  return [phone["name"] for phone in database]

@tool
def get_phone_by_name(name: str) -> Dict:
  """–ò—Å–ø–æ–ª—å–∑—É–π —ç—Ç–æ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ü–û–õ–ù–£–Æ –ò–ù–§–û–†–ú–ê–¶–ò–Æ –æ —Ç–µ–ª–µ—Ñ–æ–Ω–µ –ø–æ –µ–≥–æ —Ç–æ—á–Ω–æ–º—É –∏–º–µ–Ω–∏."""
  print(f"--- [–î–∂–∏–Ω–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç 'get_phone_by_name' —Å –∏–º–µ–Ω–µ–º: {name}] ---")
  for phone in database:
    if phone["name"].lower() == name.lower():
      return phone
  return {"error": "–¢–µ–ª–µ—Ñ–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω"}

# --- 2. –°–æ–±–∏—Ä–∞–µ–º —Å—É–ø–µ—Ä-–¥–∂–∏–Ω–Ω–∞ (–ê–≥–µ–Ω—Ç–∞) ---
gigachat = GigaChat(credentials="–í–ê–®_–°–ï–ö–†–ï–¢–ù–´–ô_–ö–õ–Æ–ß_–°–Æ–î–ê", verify_ssl_certs=False)
tools = [get_all_phone_names, get_phone_by_name]

# MemorySaver() - —ç—Ç–æ —Å–∞–º–∞—è –ø—Ä–æ—Å—Ç–∞—è –ø–∞–º—è—Ç—å, –∫–∞–∫ –∑–∞–ø–∏—Å–Ω–∞—è –∫–Ω–∏–∂–∫–∞.
# –û–Ω –±—É–¥–µ—Ç –ø–æ–º–Ω–∏—Ç—å –¥–∏–∞–ª–æ–≥, –ø–æ–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç.
memory = MemorySaver() 

# create_react_agent - —ç—Ç–æ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Å–æ–∑–¥–∞–µ—Ç –¥–ª—è –Ω–∞—Å —É–º–Ω–æ–≥–æ –¥–∂–∏–Ω–Ω–∞ (–∞–≥–µ–Ω—Ç–∞),
# –∫–æ—Ç–æ—Ä—ã–π —É–º–µ–µ—Ç –¥—É–º–∞—Ç—å, –≤—ã–±–∏—Ä–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ –∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Ç–≤–µ—Ç–∞ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç.
agent_executor = create_react_agent(gigachat, tools=tools, checkpointer=memory)

# --- 3. –ù–∞—á–∏–Ω–∞–µ–º –¥–∏–∞–ª–æ–≥ ---
# –£ –∫–∞–∂–¥–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–≤–æ–π "id", –∫–∞–∫ –Ω–æ–º–µ—Ä —á–∞—Ç–∞ –≤ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–µ.
# –¢–∞–∫ –¥–∂–∏–Ω–Ω –Ω–µ –ø–µ—Ä–µ–ø—É—Ç–∞–µ—Ç –Ω–∞—à —Ä–∞–∑–≥–æ–≤–æ—Ä —Å —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–º –¥—Ä—É–≥–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞.
config = {"configurable": {"thread_id": "my-phone-dialog-1"}}

# –°–æ–∑–¥–∞–¥–∏–º –º–∞–ª–µ–Ω—å–∫—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –æ–±—â–µ–Ω–∏—è
def chat_with_agent(user_input):
    print(f"\\n–í–´: {user_input}")
    # –ú—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–≥–µ–Ω—Ç—É –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç, –∞ —Å–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
    response = agent_executor.invoke(
        {"messages": [("user", user_input)]},
        config=config
    )
    # –û—Ç–≤–µ—Ç –∞–≥–µ–Ω—Ç–∞ —Ç–æ–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–ø–∏—Å–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π, –±–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ
    print("–î–ñ–ò–ù–ù-–ü–†–û–î–ê–í–ï–¶:", response["messages"][-1].content)

chat_with_agent("–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫–∏–µ —Ç–µ–ª–µ—Ñ–æ–Ω—ã —É –≤–∞—Å –µ—Å—Ç—å –≤ –Ω–∞–ª–∏—á–∏–∏?")
chat_with_agent("–†–∞—Å—Å–∫–∞–∂–∏-–∫–∞ –ø–æ–ø–æ–¥—Ä–æ–±–Ω–µ–µ –ø—Ä–æ Galaxy S24. –°–∫–æ–ª—å–∫–æ –æ–Ω —Å—Ç–æ–∏—Ç?")
chat_with_agent("–ê –∫–∞–∫–æ–π —Å–∞–º—ã–π –¥–µ—à–µ–≤—ã–π?") # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–º–Ω–∏—Ç –ª–∏ –æ–Ω –∫–æ–Ω—Ç–µ–∫—Å—Ç. –û–Ω –¥–æ–ª–∂–µ–Ω —Å–Ω–æ–≤–∞ –≤—ã–∑–≤–∞—Ç—å get_phone_by_name –¥–ª—è Redmi.
`
}
]
  },
  // LangGraph Workflow –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, —Ç–∞–∫ –∫–∞–∫ –æ–Ω —É–∂–µ –Ω–∞ –¥–æ–≤–æ–ª—å–Ω–æ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–º —É—Ä–æ–≤–Ω–µ –∏ —Ö–æ—Ä–æ—à–æ –æ–±—ä—è—Å–Ω–µ–Ω —á–µ—Ä–µ–∑ –∞–Ω–∞–ª–æ–≥–∏—é.
  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –¥–µ—Ç–∞–ª–µ–π –º–æ–∂–µ—Ç –ø–µ—Ä–µ–≥—Ä—É–∑–∏—Ç—å —É—á–µ–Ω–∏–∫–æ–≤.
  {
    id: 'langgraph-workflow',
    title: 'LangGraph: –°–æ–±–∏—Ä–∞–µ–º –ò–ò-–∫–æ–º–∞–Ω–¥—É üë∑‚Äç‚ôÇÔ∏èüë∑‚Äç‚ôÄÔ∏è',
    description: '–°–æ–±–∏—Ä–∞–µ–º —Å–ª–æ–∂–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞ "–≤—Ä—É—á–Ω—É—é" –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —É–∑–ª–æ–≤. –û–Ω —Å–º–æ–∂–µ—Ç —Å–∞–º —Ä–µ—à–∞—Ç—å, –∫–æ–≥–¥–∞ –∏—Å–∫–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –∞ –∫–æ–≥–¥–∞ –æ—Ç–≤–µ—á–∞—Ç—å.',
    category: 'LangChain & GigaChat',
    tags: ['langgraph', 'workflow', '–ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫', '–∞–≥–µ–Ω—Ç', '—à–∞–±–ª–æ–Ω—ã'],
    content: [
`–ò–Ω–æ–≥–¥–∞ –Ω–∞–º –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã –Ω–∞–¥ –∑–∞–¥–∞—á–µ–π —Ä–∞–±–æ—Ç–∞–ª–∞ —Ü–µ–ª–∞—è –∫–æ–º–∞–Ω–¥–∞ –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ò–ò. LangGraph –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞–º –ø–æ—Å—Ç—Ä–æ–∏—Ç—å —Ç–∞–∫—É—é "–∫–æ–º–∞–Ω–¥—É" (–µ–µ –Ω–∞–∑—ã–≤–∞—é—Ç "–≥—Ä–∞—Ñ" –∏–ª–∏ "—Ä–∞–±–æ—á–∏–π –ø—Ä–æ—Ü–µ—Å—Å").

### –û—Å–Ω–æ–≤–Ω–∞—è –∏–¥–µ—è: –û—Ñ–∏—Å –¥–ª—è –ò–ò
–ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ –º—ã —Å—Ç—Ä–æ–∏–º –æ—Ñ–∏—Å –¥–ª—è –Ω–∞—à–µ–π –ò–ò-–∫–æ–º–∞–Ω–¥—ã.
- **–£–∑–µ–ª (Node)**: —ç—Ç–æ –æ—Ç–¥–µ–ª—å–Ω—ã–π "—Ä–∞–±–æ—Ç–Ω–∏–∫" –≤ –Ω–∞—à–µ–º –æ—Ñ–∏—Å–µ. –£ –∫–∞–∂–¥–æ–≥–æ —Å–≤–æ—è –∑–∞–¥–∞—á–∞.
  - *–†–∞–±–æ—Ç–Ω–∏–∫-–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫*: –≠—Ç–æ –º–µ–Ω–µ–¥–∂–µ—Ä. –û–Ω –ø–æ–ª—É—á–∞–µ—Ç –∑–∞–¥–∞—á—É –∏ —Ä–µ—à–∞–µ—Ç, —á—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ.
  - *–†–∞–±–æ—Ç–Ω–∏–∫-–ò—Å–∫–∞—Ç–µ–ª—å*: –≠—Ç–æ —Å—Ç–∞–∂–µ—Ä. –ú–µ–Ω–µ–¥–∂–µ—Ä –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π.
  - *–†–∞–±–æ—Ç–Ω–∏–∫-–ü–∏—Å–∞—Ç–µ–ª—å*: –≠—Ç–æ –∫–æ–ø–∏—Ä–∞–π—Ç–µ—Ä. –û–Ω –±–µ—Ä–µ—Ç –≤—Å—é –Ω–∞–π–¥–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –ø–∏—à–µ—Ç –∫—Ä–∞—Å–∏–≤—ã–π —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç.
- **–†–µ–±—Ä–æ (Edge)**: —ç—Ç–æ "–∫–æ—Ä–∏–¥–æ—Ä", –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É —Ä–∞–±–æ—Ç–Ω–∏–∫–∏ –ø–µ—Ä–µ–¥–∞—é—Ç –¥—Ä—É–≥ –¥—Ä—É–≥—É –¥–æ–∫—É–º–µ–Ω—Ç—ã. –ò–Ω–æ–≥–¥–∞ –º–µ–Ω–µ–¥–∂–µ—Ä –º–æ–∂–µ—Ç –ø–æ—Å—Ç—Ä–æ–∏—Ç—å "—Ä–∞–∑–≤–∏–ª–∫—É": –ï–°–õ–ò –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –º–∞–ª–æ, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ –æ–¥–Ω–æ–º—É –∫–æ—Ä–∏–¥–æ—Ä—É (–∫ –ò—Å–∫–∞—Ç–µ–ª—é), –ï–°–õ–ò –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ‚Äî –ø–æ –¥—Ä—É–≥–æ–º—É (–∫ –ü–∏—Å–∞—Ç–µ–ª—é).
- **–°–æ—Å—Ç–æ—è–Ω–∏–µ (State)**: —ç—Ç–æ –æ–±—â–∞—è –ø–∞–ø–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, –∫—É–¥–∞ –≤—Å–µ —Ä–∞–±–æ—Ç–Ω–∏–∫–∏ —Å–∫–ª–∞–¥—ã–≤–∞—é—Ç —Å–≤–æ–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã (–≤–æ–ø—Ä–æ—Å, —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞, —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç), —á—Ç–æ–±—ã —É –≤—Å–µ—Ö –±—ã–ª –¥–æ—Å—Ç—É–ø.

### –ó–∞–≥–æ—Ç–æ–≤–∫–∞: –ò–ò-–∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å
–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Å–º–æ–∂–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, —Ç—Ä–µ–±—É—é—â–∏–µ –ø–æ–∏—Å–∫–∞ —Å–≤–µ–∂–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ.`,
{
  language: 'python',
  code: `import os
from typing import TypedDict, Literal, List
from langchain_community.tools.tavily_search import TavilySearchResults
from langchain_gigachat import GigaChat
from langgraph.graph import StateGraph, END
from langgraph.checkpoint.memory import MemorySaver
from pydantic import BaseModel, Field

# --- 1. –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ –ú–æ–¥–µ–ª—å ---
os.environ["TAVILY_API_KEY"] = "–í–ê–®_–ö–õ–Æ–ß_TAVILY" # –ö–ª—é—á –¥–ª—è –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ Tavily
GIGACHAT_API_KEY = "–í–ê–®_–ö–õ–Æ–ß_GIGACHAT"
search_tool = TavilySearchResults(max_results=2)
llm = GigaChat(credentials=GIGACHAT_API_KEY, verify_ssl_certs=False)

# --- 2. –û–ø—Ä–µ–¥–µ–ª—è–µ–º "–æ–±—â—É—é –ø–∞–ø–∫—É" (–°–æ—Å—Ç–æ—è–Ω–∏–µ) ---
class GraphState(TypedDict):
    question: str
    search_results: List[str]
    final_answer: str

# --- 3. –û–ø—Ä–µ–¥–µ–ª—è–µ–º "—Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤" (–£–∑–ª—ã) ---

# –†–∞–±–æ—Ç–Ω–∏–∫-–ò—Å–∫–∞—Ç–µ–ª—å: –ø—Ä–æ—Å—Ç–æ –∏—â–µ—Ç –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ
def search_node(state: GraphState):
    print("--- –£–ó–ï–õ: –†–ê–ë–û–¢–ù–ò–ö-–ò–°–ö–ê–¢–ï–õ–¨ ---")
    question = state["question"]
    results = search_tool.invoke({"query": question})
    # –ö–ª–∞–¥–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ "–æ–±—â—É—é –ø–∞–ø–∫—É"
    return {"search_results": results}

# –†–∞–±–æ—Ç–Ω–∏–∫-–ü–∏—Å–∞—Ç–µ–ª—å: –ø–∏—à–µ—Ç —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
def generate_node(state: GraphState):
    print("--- –£–ó–ï–õ: –†–ê–ë–û–¢–ù–ò–ö-–ü–ò–°–ê–¢–ï–õ–¨ ---")
    question = state["question"]
    search_results = state["search_results"]
    prompt = f"–î–∞–π —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å '{question}', –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ —ç—Ç–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑ –ø–æ–∏—Å–∫–∞: {search_results}"
    response = llm.invoke(prompt)
    # –ö–ª–∞–¥–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ "–æ–±—â—É—é –ø–∞–ø–∫—É"
    return {"final_answer": response.content}

# --- 4. –°–±–æ—Ä–∫–∞ "–æ—Ñ–∏—Å–∞" (–ì—Ä–∞—Ñ–∞) ---
workflow = StateGraph(GraphState)

# –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ –≤ –æ—Ñ–∏—Å, –¥–∞–≤–∞—è –∏–º –∏–º–µ–Ω–∞
workflow.add_node("searcher", search_node)
workflow.add_node("generator", generate_node)

# –£–∫–∞–∑—ã–≤–∞–µ–º, –∫—Ç–æ –Ω–∞—á–∏–Ω–∞–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –ø–µ—Ä–≤—ã–º
workflow.set_entry_point("searcher")

# –ü—Ä–æ–∫–ª–∞–¥—ã–≤–∞–µ–º "–∫–æ—Ä–∏–¥–æ—Ä—ã" –º–µ–∂–¥—É —Ä–∞–±–æ—Ç–Ω–∏–∫–∞–º–∏
workflow.add_edge("searcher", "generator") # –ü–æ—Å–ª–µ "searcher" –≤—Å–µ–≥–¥–∞ –∏–¥–µ—Ç "generator"
workflow.add_edge("generator", END) # END –∑–Ω–∞—á–∏—Ç "–∫–æ–Ω–µ—Ü —Ä–∞–±–æ—Ç—ã", –æ—Ñ–∏—Å –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è

# --- 5. –ö–æ–º–ø–∏–ª—è—Ü–∏—è –∏ –∑–∞–ø—É—Å–∫ ---
# .compile() —Å–æ–±–∏—Ä–∞–µ—Ç –Ω–∞—à –æ—Ñ–∏—Å –≤ –≥–æ—Ç–æ–≤—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É
app = workflow.compile()

# –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—à—É –∫–æ–º–∞–Ω–¥—É —Å –≤–æ–ø—Ä–æ—Å–æ–º
initial_state = {"question": "–ö—Ç–æ –≤—ã–∏–≥—Ä–∞–ª –ø–æ—Å–ª–µ–¥–Ω–∏–π –ß–µ–º–ø–∏–æ–Ω–∞—Ç –º–∏—Ä–∞ –ø–æ —Ñ—É—Ç–±–æ–ª—É –∏ –≤ –∫–∞–∫–æ–º –≥–æ–¥—É?"}
final_state = app.invoke(initial_state)

# –ü–µ—á–∞—Ç–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç –†–∞–±–æ—Ç–Ω–∏–∫–∞-–ü–∏—Å–∞—Ç–µ–ª—è
print("\\n--- –§–ò–ù–ê–õ–¨–ù–´–ô –û–¢–í–ï–¢ ---")
print(final_state["final_answer"])`
}
]
  },
];